# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING


class RequiredEarning(TypedDict):
    # Unique identifier for each earnings.
    refId: str

    # Company code associated with employee.
    companyCode: str

    # Employee number associated with employee for time data.
    empNo: str

    # Earnings code for time data
    code: str

    # Source of the data as appropriate. Usually an alias of the system sending the data.
    source: str

class OptionalEarning(TypedDict, total=False):
    # Used in the calculation of coefficient overtime and tips processing. Formatting must conform to ISO 8601 UTC Format
    chargeDate: datetime

    # Number of hours associated with earnings, if appropriate. Decimal value up to 4 decimal places. Positive and negative values allowed.
    hours: str

    # Amount associated with earnings, if appropriate. Positive and negative values allowed.
    amount: str

    # Number of pieces associated with earnings, if appropriate. Positive and negative values allowed.
    pieceCount: str

    # Shift code associated with time data.
    shiftCode: str

    # Location associated with employee.
    location: str

    # Job code associated with employee’s time data.
    job: str

    # Project code or value associated with employee’s time data.
    project: str

    # Organization level 1 code associated with employee’s time data
    orgLvl1: str

    # Organization level 2 code associated with employee’s time data.
    orgLvl2: str

    # Organization level 3 code associated with employee’s time data.
    orgLvl3: str

    # Organization level 4 code associated with employee’s time data.
    orgLvl4: str

    # Pay rate associated with employee’s time data.  Value overrides pay rate in UKG Pro.
    payRate: str

    # Piece rate associated with employee’s time data.  Value overrides piece rate in UKG Pro.
    pieceRate: str

    # The Record of Employment pay date.  Must be a valid pay date.
    roePayDate: datetime

    # Used for co-efficient overtime period adjustment start date.
    adjEarnPeriodStartDate: datetime

    # Used for co-efficient overtime period adjustment end date.
    adjEarnPeriodEndDate: datetime

    # Sequence of multiple checks for a single employee. Specify the type of additional pay (check or DDA) being added to the employee(s) via Time Clock Import. A - Creates an additional direct deposit advice with deductions (for employees  with existing DD setups). D - Creates an additional direct deposit with No deductions (for employees with existing DD setups). B - Creates an additional pay with deductions; this will create a live check for the employees. J -  Creates an additional pay with No deductions; this will create a live check for the employees 
    checkSequence: int

    # R - Creates a Regular Pay check.
    createPayType: str

    # To force the creation of an additional pay via Time clock import, set this to Y.
    forcePayCreation: str

    # This identifies if an earning is to be grossed up.
    grossUp: str

    # Specified net amount.
    grossUpTarget: int

    # The Gross Up Tax Calculation Method (E_Batch. EbtGrossUpTaxCalcMethod) Numeric value to identify which taxes to include in the gross up calculation.
    grossUpTaxCalcMethod: int

class Earning(RequiredEarning, OptionalEarning):
    pass
