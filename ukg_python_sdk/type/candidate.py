# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from ukg_python_sdk.type.behaviors import Behaviors
from ukg_python_sdk.type.candidate_contact_info import CandidateContactInfo
from ukg_python_sdk.type.candidate_name import CandidateName
from ukg_python_sdk.type.candidate_preferred_locale import CandidatePreferredLocale
from ukg_python_sdk.type.candidate_roles import CandidateRoles
from ukg_python_sdk.type.educations import Educations
from ukg_python_sdk.type.hyperlinks import Hyperlinks
from ukg_python_sdk.type.licenses import Licenses
from ukg_python_sdk.type.links import Links
from ukg_python_sdk.type.motivations import Motivations
from ukg_python_sdk.type.skill import Skill
from ukg_python_sdk.type.workexperience import Workexperience

RequiredCandidate = TypedDict("RequiredCandidate", {
    })

OptionalCandidate = TypedDict("OptionalCandidate", {
    # The id of the candidate for whom the background check order has been requested.
    "id": str,

    # The candidate creation date.
    "created_at": str,

    # The id of the person who has created the application.
    "creator.id": str,

    # The candidate id in the core HR system.
    "person_id": str,

    # The alternative user id that can be used in third-party vendors’ integrations. Returned only for users with the “recruiter”, “hiring-manager”, or “recruiting-administrator” role.
    "integration": str,

    # A flag indicating whether the candidate is an internal employee. 
    "is_internal": str,

    # A flag indicating whether the candidate is an active employee. Can only be specified when is_internal is true.
    "is_active": str,

    # A flag indicating whether the candidate is willing to relocate. 
    "is_willing_to_relocate": str,

    "preferred_locale": CandidatePreferredLocale,

    "name": CandidateName,

    "contact_info": CandidateContactInfo,

    # An array containing candidate’s skills.
    "skills": typing.List[Skill],

    "work_experience": typing.List[Workexperience],

    "educations": typing.List[Educations],

    "licenses": typing.List[Licenses],

    "behaviors": typing.List[Behaviors],

    "motivations": typing.List[Motivations],

    "roles": CandidateRoles,

    "hyperlinks": typing.List[Hyperlinks],

    # The last updated date.
    "updated_at": str,

    "org_units": typing.Union[bool, date, datetime, dict, float, int, list, str, None],

    "links": typing.List[Links],
    }, total=False)

class Candidate(RequiredCandidate, OptionalCandidate):
    pass
