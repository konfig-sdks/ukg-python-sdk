# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING

from ukg_python_sdk.type.links import Links
from ukg_python_sdk.type.locations import Locations
from ukg_python_sdk.type.opportunity_behavior_criteria import OpportunityBehaviorCriteria
from ukg_python_sdk.type.opportunity_company import OpportunityCompany
from ukg_python_sdk.type.opportunity_compenasation import OpportunityCompenasation
from ukg_python_sdk.type.opportunity_dedault_locale import OpportunityDedaultLocale
from ukg_python_sdk.type.opportunity_description import OpportunityDescription
from ukg_python_sdk.type.opportunity_education_criteria import OpportunityEducationCriteria
from ukg_python_sdk.type.opportunity_full_time_equivalent import OpportunityFullTimeEquivalent
from ukg_python_sdk.type.opportunity_head_count import OpportunityHeadCount
from ukg_python_sdk.type.opportunity_incumbent import OpportunityIncumbent
from ukg_python_sdk.type.opportunity_job import OpportunityJob
from ukg_python_sdk.type.opportunity_job_boards import OpportunityJobBoards
from ukg_python_sdk.type.opportunity_job_family import OpportunityJobFamily
from ukg_python_sdk.type.opportunity_justification_comments import OpportunityJustificationComments
from ukg_python_sdk.type.opportunity_license_criteria import OpportunityLicenseCriteria
from ukg_python_sdk.type.opportunity_motivation_criteria import OpportunityMotivationCriteria
from ukg_python_sdk.type.opportunity_recruiting_process import OpportunityRecruitingProcess
from ukg_python_sdk.type.opportunity_skill_criteria import OpportunitySkillCriteria
from ukg_python_sdk.type.opportunity_work_experience_criteria import OpportunityWorkExperienceCriteria
from ukg_python_sdk.type.org_unit_groups import OrgUnitGroups

class RequiredOpportunity(TypedDict):
    pass

class OptionalOpportunity(TypedDict, total=False):
    title: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    description: OpportunityDescription

    # The id of the opportunity associated with the candidate application.
    id: str

    updated_at: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    created_at: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    requisition_number: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    dedault_locale: OpportunityDedaultLocale

    compenasation: OpportunityCompenasation

    job: OpportunityJob

    job_family: OpportunityJobFamily

    locations: typing.List[Locations]

    company: OpportunityCompany

    recruiter: typing.Dict[str, typing.Union[bool, date, datetime, dict, float, int, list, str, None]]

    hiring_manager: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    onboarding_owner: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    recruiting_process: OpportunityRecruitingProcess

    job_boards: OpportunityJobBoards

    published_date: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    closed_date: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    status: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    is_featured: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    is_shared_with_everyone: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    internal_notes: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    skill_criteria: OpportunitySkillCriteria

    work_experience_criteria: OpportunityWorkExperienceCriteria

    education_criteria: OpportunityEducationCriteria

    license_criteria: OpportunityLicenseCriteria

    behavior_criteria: OpportunityBehaviorCriteria

    motivation_criteria: OpportunityMotivationCriteria

    is_continuous_opening: bool

    full_time_equivalent: OpportunityFullTimeEquivalent

    head_count: OpportunityHeadCount

    hours_per_week: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    hours_per_shift: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    staffing_plan_impact: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    target_start_date: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    incumbent: OpportunityIncumbent

    priority: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    is_budgeted: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    opening_reason: typing.Union[bool, date, datetime, dict, float, int, list, str, None]

    justification_comments: OpportunityJustificationComments

    org_unit_groups: typing.List[OrgUnitGroups]

    links: typing.List[Links]

class Opportunity(RequiredOpportunity, OptionalOpportunity):
    pass
