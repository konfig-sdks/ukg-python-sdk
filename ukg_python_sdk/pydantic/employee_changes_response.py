# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmployeeChangesResponse(BaseModel):
    # Employee First Name
    first_name: typing.Optional[str] = Field(None, alias='firstName')

    # Employee Last Name
    last_name: typing.Optional[str] = Field(None, alias='lastName')

    # Employee Preferred Name
    preferred_name: typing.Optional[str] = Field(None, alias='preferredName')

    # Employee Email Address
    email_address: typing.Optional[str] = Field(None, alias='emailAddress')

    # Employee Country Code
    country_code: typing.Optional[str] = Field(None, alias='countryCode')

    # Employee Language Code
    language_code: typing.Optional[str] = Field(None, alias='languageCode')

    # Employee Number
    employee_number: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeNumber')

    # Employee Identifier
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    # Employee Person Identifier
    person_id: typing.Optional[str] = Field(None, alias='personId')

    # User Integration Key
    user_integration_key: typing.Optional[str] = Field(None, alias='userIntegrationKey')

    # Employee Company Name
    company_name: typing.Optional[str] = Field(None, alias='companyName')

    # Employee Company Identifier
    company_id: typing.Optional[str] = Field(None, alias='companyId')

    # Employee Surpervisor Identifier
    supervisor_id: typing.Optional[str] = Field(None, alias='supervisorId')

    # Employee Hourly Salary
    salary_or_hourly: typing.Optional[str] = Field(None, alias='salaryOrHourly')

    # Full/Part Time Identifier
    full_time_or_part_time: typing.Optional[str] = Field(None, alias='fullTimeOrPartTime')

    # Employee Active Flag
    is_active: typing.Optional[bool] = Field(None, alias='isActive')

    # Employee Work Location
    work_location: typing.Optional[str] = Field(None, alias='workLocation')

    # Employee Job Code
    job_code: typing.Optional[str] = Field(None, alias='jobCode')

    # Employee Project Code
    project_code: typing.Optional[str] = Field(None, alias='projectCode')

    # Employee Orginizational Level 1
    org_level1_code: typing.Optional[str] = Field(None, alias='orgLevel1Code')

    # Employee Orginizational Level 2
    org_level2_code: typing.Optional[str] = Field(None, alias='orgLevel2Code')

    # Employee Orginizational Level 3
    org_level3_code: typing.Optional[str] = Field(None, alias='orgLevel3Code')

    # Employee Orginizational Level 4
    org_level4_code: typing.Optional[str] = Field(None, alias='orgLevel4Code')

    # Employee Middle Name
    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    # Employee Work Phone
    work_phone: typing.Optional[str] = Field(None, alias='workPhone')

    # Employee Home Phone
    home_phone: typing.Optional[str] = Field(None, alias='homePhone')

    # Employee Address 1
    employee_address1: typing.Optional[str] = Field(None, alias='employeeAddress1')

    # Employee Address 2
    employee_address2: typing.Optional[str] = Field(None, alias='employeeAddress2')

    # Employee City
    city: typing.Optional[str] = Field(None, alias='city')

    # Employee State
    state: typing.Optional[str] = Field(None, alias='state')

    # Employee Zip Code
    zip_code: typing.Optional[str] = Field(None, alias='zipCode')

    # Employee Termination Date
    termination_date: typing.Optional[str] = Field(None, alias='terminationDate')

    # Employee Hire Date
    hire_date: typing.Optional[str] = Field(None, alias='hireDate')

    # Employee Supervisor Name
    supervisor_name: typing.Optional[str] = Field(None, alias='supervisorName')

    # Employee Name Prefix
    prefix: typing.Optional[str] = Field(None, alias='prefix')

    # Employee Name Suffix
    suffix: typing.Optional[str] = Field(None, alias='suffix')

    # Employee Alternative Email Address
    alternate_email_address: typing.Optional[str] = Field(None, alias='alternateEmailAddress')

    # Employee Gender
    gender: typing.Optional[str] = Field(None, alias='gender')

    # Employee Employment Status
    employee_status: typing.Optional[str] = Field(None, alias='employeeStatus')

    # Employee Type
    employee_type: typing.Optional[str] = Field(None, alias='employeeType')

    # Employment Status Start Date
    empl_status_start_date: typing.Optional[str] = Field(None, alias='emplStatusStartDate')

    # Date Employee Started Current Job
    date_in_job: typing.Optional[str] = Field(None, alias='dateInJob')

    # Date Employee Last Hired
    date_of_last_hire: typing.Optional[str] = Field(None, alias='dateOfLastHire')

    # Employee Job Group Code
    job_group_code: typing.Optional[str] = Field(None, alias='jobGroupCode')

    # Alternate Job Title for Employee
    alternate_job_title: typing.Optional[str] = Field(None, alias='alternateJobTitle')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
