# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmpPersonDetails(BaseModel):
    additional_name1: typing.Optional[str] = Field(None, alias='additionalName1')

    additional_name2: typing.Optional[str] = Field(None, alias='additionalName2')

    address_id: typing.Optional[str] = Field(None, alias='addressId')

    address_is_on_tax_boundary: typing.Optional[bool] = Field(None, alias='addressIsOnTaxBoundary')

    address_latitude: typing.Optional[typing.Union[int, float]] = Field(None, alias='addressLatitude')

    cobra_export: typing.Optional[str] = Field(None, alias='cobraExport')

    cobra_is_active: typing.Optional[bool] = Field(None, alias='cobraIsActive')

    cobra_reason: typing.Optional[str] = Field(None, alias='cobraReason')

    cobra_status: typing.Optional[str] = Field(None, alias='cobraStatus')

    cobra_status_date: typing.Optional[datetime] = Field(None, alias='cobraStatusDate')

    community_broadcast_sms_code: typing.Optional[str] = Field(None, alias='communityBroadcastSmsCode')

    consent_electronic_w2: typing.Optional[bool] = Field(None, alias='consentElectronicW2')

    consent_electronicw2pr: typing.Optional[bool] = Field(None, alias='consentElectronicw2pr')

    date_deceased: typing.Optional[datetime] = Field(None, alias='dateDeceased')

    date_of_cobra_event: typing.Optional[datetime] = Field(None, alias='dateOfCobraEvent')

    date_of_cobra_export: typing.Optional[datetime] = Field(None, alias='dateOfCobraExport')

    date_of_cobra_letter: typing.Optional[datetime] = Field(None, alias='dateOfCobraLetter')

    date_of_i9_expiration: typing.Optional[datetime] = Field(None, alias='dateOfI9Expiration')

    datetime_changed: typing.Optional[datetime] = Field(None, alias='datetimeChanged')

    datetime_created: typing.Optional[datetime] = Field(None, alias='datetimeCreated')

    disability_type: typing.Optional[str] = Field(None, alias='disabilityType')

    ethnic_description: typing.Optional[str] = Field(None, alias='ethnicDescription')

    former_name: typing.Optional[str] = Field(None, alias='formerName')

    health_blood_type: typing.Optional[str] = Field(None, alias='healthBloodType')

    health_eyes: typing.Optional[str] = Field(None, alias='healthEyes')

    health_hair: typing.Optional[str] = Field(None, alias='healthHair')

    health_height_feet: typing.Optional[str] = Field(None, alias='healthHeightFeet')

    health_height_inches: typing.Optional[str] = Field(None, alias='healthHeightInches')

    health_last_donate_date: typing.Optional[datetime] = Field(None, alias='healthLastDonateDate')

    health_weight: typing.Optional[typing.Union[int, float]] = Field(None, alias='healthWeight')

    i9_alien_number: typing.Optional[str] = Field(None, alias='i9AlienNumber')

    i9_doc_a: typing.Optional[str] = Field(None, alias='i9DocA')

    i9_doc_b: typing.Optional[str] = Field(None, alias='i9DocB')

    i9_doc_c: typing.Optional[str] = Field(None, alias='i9DocC')

    i9_verified: typing.Optional[bool] = Field(None, alias='i9Verified')

    i9_visa_type: typing.Optional[str] = Field(None, alias='i9VisaType')

    i9_work_auth: typing.Optional[str] = Field(None, alias='i9WorkAuth')

    is_disabled: typing.Optional[bool] = Field(None, alias='isDisabled')

    is_multi_pay_group: typing.Optional[bool] = Field(None, alias='isMultiPayGroup')

    is_smoker: typing.Optional[bool] = Field(None, alias='isSmoker')

    military_service: typing.Optional[bool] = Field(None, alias='militaryService')

    military_branch_served: typing.Optional[str] = Field(None, alias='militaryBranchServed')

    military_era: typing.Optional[str] = Field(None, alias='militaryEra')

    military_is_disabled_vet: typing.Optional[str] = Field(None, alias='militaryIsDisabledVet')

    military_is_oth_elig_vet: typing.Optional[str] = Field(None, alias='militaryIsOthEligVet')

    military_is_oth_elig_vet_basis: typing.Optional[str] = Field(None, alias='militaryIsOthEligVetBasis')

    military_is_active_wartime_vet: typing.Optional[str] = Field(None, alias='militaryIsActiveWartimeVet')

    name_former: typing.Optional[str] = Field(None, alias='nameFormer')

    previous_s_s_n: typing.Optional[str] = Field(None, alias='previousSSN')

    origin_country: typing.Optional[str] = Field(None, alias='originCountry')

    origin_location: typing.Optional[str] = Field(None, alias='originLocation')

    w2_is_deceased: typing.Optional[bool] = Field(None, alias='w2IsDeceased')

    cobra_notes: typing.Optional[str] = Field(None, alias='cobraNotes')

    address_sms: typing.Optional[str] = Field(None, alias='addressSms')

    military_separation_date: typing.Optional[datetime] = Field(None, alias='militarySeparationDate')

    home_phone_is_private: typing.Optional[bool] = Field(None, alias='homePhoneIsPrivate')

    sms_approvals: typing.Optional[bool] = Field(None, alias='smsApprovals')

    sms_pay_notification: typing.Optional[bool] = Field(None, alias='smsPayNotification')

    i9_visa_expiration_date: typing.Optional[datetime] = Field(None, alias='i9VisaExpirationDate')

    military_is_medal_vet: typing.Optional[str] = Field(None, alias='militaryIsMedalVet')

    last_name_not_same_as_s_s_card: typing.Optional[str] = Field(None, alias='lastNameNotSameAsSSCard')

    chk_cashing_inst_code: typing.Optional[str] = Field(None, alias='chkCashingInstCode')

    nationality1: typing.Optional[str] = Field(None, alias='nationality1')

    nationality2: typing.Optional[str] = Field(None, alias='nationality2')

    nationality3: typing.Optional[str] = Field(None, alias='nationality3')

    person_id: typing.Optional[str] = Field(None, alias='personId')

    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    preferred_name: typing.Optional[str] = Field(None, alias='preferredName')

    name_prefix_code: typing.Optional[str] = Field(None, alias='namePrefixCode')

    name_sufix_code: typing.Optional[str] = Field(None, alias='nameSufixCode')

    email_address: typing.Optional[str] = Field(None, alias='emailAddress')

    email_address_alternate: typing.Optional[str] = Field(None, alias='emailAddressAlternate')

    home_phone: typing.Optional[str] = Field(None, alias='homePhone')

    home_phone_country: typing.Optional[str] = Field(None, alias='homePhoneCountry')

    address_line1: typing.Optional[str] = Field(None, alias='addressLine1')

    address_line2: typing.Optional[str] = Field(None, alias='addressLine2')

    address_city: typing.Optional[str] = Field(None, alias='addressCity')

    address_state: typing.Optional[str] = Field(None, alias='addressState')

    address_zip_code: typing.Optional[str] = Field(None, alias='addressZipCode')

    address_country: typing.Optional[str] = Field(None, alias='addressCountry')

    address_county: typing.Optional[str] = Field(None, alias='addressCounty')

    national_id: typing.Optional[str] = Field(None, alias='nationalId')

    national_id_country: typing.Optional[str] = Field(None, alias='nationalIdCountry')

    date_of_birth: typing.Optional[datetime] = Field(None, alias='dateOfBirth')

    gender: typing.Optional[str] = Field(None, alias='gender')

    ethnic_i_d_code: typing.Optional[str] = Field(None, alias='ethnicIDCode')

    marital_status_code: typing.Optional[str] = Field(None, alias='maritalStatusCode')

    ssn: typing.Optional[str] = Field(None, alias='ssn')

    ssn_is_suppressed: typing.Optional[bool] = Field(None, alias='ssnIsSuppressed')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
