# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class UserProfileDetails(BaseModel):
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    person_id: typing.Optional[str] = Field(None, alias='personId')

    email: typing.Optional[str] = Field(None, alias='email')

    work_phone: typing.Optional[str] = Field(None, alias='workPhone')

    user_status: typing.Optional[str] = Field(None, alias='userStatus')

    user_id: typing.Optional[int] = Field(None, alias='userId')

    user_name: typing.Optional[str] = Field(None, alias='userName')

    role_id: typing.Optional[int] = Field(None, alias='roleId')

    role_name: typing.Optional[str] = Field(None, alias='roleName')

    role_description: typing.Optional[str] = Field(None, alias='roleDescription')

    integration_user_key: typing.Optional[str] = Field(None, alias='integrationUserKey')

    filter_company_id: typing.Optional[str] = Field(None, alias='filterCompanyId')

    filter_deduction_group_code: typing.Optional[str] = Field(None, alias='filterDeductionGroupCode')

    filter_employee_type: typing.Optional[str] = Field(None, alias='filterEmployeeType')

    filter_status: typing.Optional[str] = Field(None, alias='filterStatus')

    filter_full_time_or_part_time: typing.Optional[str] = Field(None, alias='filterFullTimeOrPartTime')

    filter_job_code: typing.Optional[str] = Field(None, alias='filterJobCode')

    filter_location_code: typing.Optional[str] = Field(None, alias='filterLocationCode')

    filter_organization_level1: typing.Optional[str] = Field(None, alias='filterOrganizationLevel1')

    filter_organization_level2: typing.Optional[str] = Field(None, alias='filterOrganizationLevel2')

    filter_organization_level3: typing.Optional[str] = Field(None, alias='filterOrganizationLevel3')

    filter_organization_level4: typing.Optional[str] = Field(None, alias='filterOrganizationLevel4')

    filter_pay_group_code: typing.Optional[str] = Field(None, alias='filterPayGroupCode')

    filter_project_code: typing.Optional[str] = Field(None, alias='filterProjectCode')

    filter_salary_or_hourly: typing.Optional[str] = Field(None, alias='filterSalaryOrHourly')

    filter_shift_code: typing.Optional[str] = Field(None, alias='filterShiftCode')

    filter_supervisor_i_d: typing.Optional[str] = Field(None, alias='filterSupervisorID')

    filter_tax_calculation_group_i_d: typing.Optional[str] = Field(None, alias='filterTaxCalculationGroupID')

    master_company: typing.Optional[str] = Field(None, alias='masterCompany')

    master_company_id: typing.Optional[str] = Field(None, alias='masterCompanyId')

    home_company: typing.Optional[str] = Field(None, alias='homeCompany')

    home_company_id: typing.Optional[str] = Field(None, alias='homeCompanyId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
