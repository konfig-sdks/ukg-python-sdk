# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from ukg_python_sdk.pydantic.department_dto import DepartmentDto
from ukg_python_sdk.pydantic.docket_dto import DocketDto
from ukg_python_sdk.pydantic.hour_type_dto import HourTypeDto
from ukg_python_sdk.pydantic.job_dto import JobDto
from ukg_python_sdk.pydantic.project_dto import ProjectDto
from ukg_python_sdk.pydantic.team_dto import TeamDto
from ukg_python_sdk.pydantic.time_code_dto import TimeCodeDto

class WorkDetailDto(BaseModel):
    id: typing.Optional[int] = Field(None, alias='id')

    work_summary_id: typing.Optional[int] = Field(None, alias='workSummaryId')

    start_time: typing.Optional[datetime] = Field(None, alias='startTime')

    end_time: typing.Optional[datetime] = Field(None, alias='endTime')

    minutes: typing.Optional[int] = Field(None, alias='minutes')

    rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='rate')

    timecode: typing.Optional[TimeCodeDto] = Field(None, alias='timecode')

    hour_type: typing.Optional[HourTypeDto] = Field(None, alias='hourType')

    job: typing.Optional[JobDto] = Field(None, alias='job')

    department: typing.Optional[DepartmentDto] = Field(None, alias='department')

    project: typing.Optional[ProjectDto] = Field(None, alias='project')

    docket: typing.Optional[DocketDto] = Field(None, alias='docket')

    team: typing.Optional[TeamDto] = Field(None, alias='team')

    work_type: typing.Optional[str] = Field(None, alias='workType')

    flag1: typing.Optional[str] = Field(None, alias='flag1')

    flag2: typing.Optional[str] = Field(None, alias='flag2')

    flag3: typing.Optional[str] = Field(None, alias='flag3')

    flag4: typing.Optional[str] = Field(None, alias='flag4')

    flag5: typing.Optional[str] = Field(None, alias='flag5')

    flag6: typing.Optional[str] = Field(None, alias='flag6')

    flag7: typing.Optional[str] = Field(None, alias='flag7')

    flag8: typing.Optional[str] = Field(None, alias='flag8')

    flag9: typing.Optional[str] = Field(None, alias='flag9')

    flag10: typing.Optional[str] = Field(None, alias='flag10')

    udf1: typing.Optional[str] = Field(None, alias='udf1')

    udf2: typing.Optional[str] = Field(None, alias='udf2')

    udf3: typing.Optional[str] = Field(None, alias='udf3')

    udf4: typing.Optional[str] = Field(None, alias='udf4')

    udf5: typing.Optional[str] = Field(None, alias='udf5')

    udf6: typing.Optional[str] = Field(None, alias='udf6')

    udf7: typing.Optional[str] = Field(None, alias='udf7')

    udf8: typing.Optional[str] = Field(None, alias='udf8')

    udf9: typing.Optional[str] = Field(None, alias='udf9')

    udf10: typing.Optional[str] = Field(None, alias='udf10')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
