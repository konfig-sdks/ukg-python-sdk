# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from ukg_python_sdk.pydantic.locations_country import LocationsCountry

class Locations(BaseModel):
    # location description.
    description: str = Field(alias='description')

    # location Code, the unique identifier.
    location_code: str = Field(alias='locationCode')

    id: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='id')

    name: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='name')

    # location City.
    city: typing.Optional[str] = Field(None, alias='city')

    # location State.
    state: typing.Optional[str] = Field(None, alias='state')

    country: typing.Optional[LocationsCountry] = Field(None, alias='country')

    type: typing.Optional[typing.Union[bool, date, datetime, dict, float, int, list, str, None]] = Field(None, alias='type')

    # location country code.
    country_code: typing.Optional[str] = Field(None, alias='countryCode')

    # location zip or postal Code.
    zip_or_postal_code: typing.Optional[str] = Field(None, alias='zipOrPostalCode')

    # The location status.
    is_active: typing.Optional[bool] = Field(None, alias='isActive')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
