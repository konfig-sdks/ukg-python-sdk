# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class Contact(BaseModel):
    city: typing.Optional[str] = Field(None, alias='city')

    country_code: typing.Optional[str] = Field(None, alias='countryCode')

    county: typing.Optional[str] = Field(None, alias='county')

    address_is_different_from_employee: typing.Optional[bool] = Field(None, alias='addressIsDifferentFromEmployee')

    address_line1: typing.Optional[str] = Field(None, alias='addressLine1')

    address_line2: typing.Optional[str] = Field(None, alias='addressLine2')

    state: typing.Optional[str] = Field(None, alias='state')

    zip_code: typing.Optional[str] = Field(None, alias='zipCode')

    cobra_export: typing.Optional[bool] = Field(None, alias='cobraExport')

    cobra_is_active: typing.Optional[bool] = Field(None, alias='cobraIsActive')

    cobra_reason: typing.Optional[str] = Field(None, alias='cobraReason')

    cobra_status: typing.Optional[str] = Field(None, alias='cobraStatus')

    cobra_status_date: typing.Optional[datetime] = Field(None, alias='cobraStatusDate')

    date_of_birth: typing.Optional[datetime] = Field(None, alias='dateOfBirth')

    date_of_c_o_b_r_a_event: typing.Optional[datetime] = Field(None, alias='dateOfCOBRAEvent')

    date_of_c_o_b_r_a_letter: typing.Optional[datetime] = Field(None, alias='dateOfCOBRALetter')

    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    gender: typing.Optional[str] = Field(None, alias='gender')

    import_id: typing.Optional[str] = Field(None, alias='importId')

    is_beneficiary: typing.Optional[bool] = Field(None, alias='isBeneficiary')

    is_dependent: typing.Optional[bool] = Field(None, alias='isDependent')

    is_disabled: typing.Optional[bool] = Field(None, alias='isDisabled')

    is_emergency_contact: typing.Optional[bool] = Field(None, alias='isEmergencyContact')

    is_smoker: typing.Optional[bool] = Field(None, alias='isSmoker')

    is_student: typing.Optional[bool] = Field(None, alias='isStudent')

    marriage_date: typing.Optional[datetime] = Field(None, alias='marriageDate')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    former_name: typing.Optional[str] = Field(None, alias='formerName')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    middle_name: typing.Optional[str] = Field(None, alias='middleName')

    name_suffix: typing.Optional[str] = Field(None, alias='nameSuffix')

    occupation: typing.Optional[str] = Field(None, alias='occupation')

    other_insurance: typing.Optional[str] = Field(None, alias='otherInsurance')

    home_phone_country: typing.Optional[str] = Field(None, alias='homePhoneCountry')

    home_phone_number: typing.Optional[str] = Field(None, alias='homePhoneNumber')

    other_phone_number: typing.Optional[str] = Field(None, alias='otherPhoneNumber')

    other_phone_type: typing.Optional[str] = Field(None, alias='otherPhoneType')

    preferred_phone_number: typing.Optional[str] = Field(None, alias='preferredPhoneNumber')

    relationship_code: typing.Optional[str] = Field(None, alias='relationshipCode')

    relationship_description: typing.Optional[str] = Field(None, alias='relationshipDescription')

    ssn: typing.Optional[str] = Field(None, alias='ssn')

    contact_id: typing.Optional[str] = Field(None, alias='contactId')

    user_defined_field01: typing.Optional[str] = Field(None, alias='userDefinedField01')

    work_phone_extension: typing.Optional[str] = Field(None, alias='workPhoneExtension')

    work_phone_number: typing.Optional[str] = Field(None, alias='workPhoneNumber')

    cobra_notes: typing.Optional[str] = Field(None, alias='cobraNotes')

    notes: typing.Optional[str] = Field(None, alias='notes')

    is_active: typing.Optional[bool] = Field(None, alias='isActive')

    status_as_of_date: typing.Optional[datetime] = Field(None, alias='statusAsOfDate')

    death_date: typing.Optional[datetime] = Field(None, alias='deathDate')

    divorce_date: typing.Optional[datetime] = Field(None, alias='divorceDate')

    email_address: typing.Optional[str] = Field(None, alias='emailAddress')

    other_phone_country_code: typing.Optional[str] = Field(None, alias='otherPhoneCountryCode')

    health_care_id: typing.Optional[str] = Field(None, alias='healthCareId')

    national_id: typing.Optional[str] = Field(None, alias='nationalId')

    national_id_expiration_date: typing.Optional[datetime] = Field(None, alias='nationalIdExpirationDate')

    person_i_d: typing.Optional[str] = Field(None, alias='personID')

    address_i_d: typing.Optional[str] = Field(None, alias='addressID')

    work_phone_id: typing.Optional[str] = Field(None, alias='workPhoneId')

    home_phone_id: typing.Optional[str] = Field(None, alias='homePhoneId')

    other_phone_id: typing.Optional[str] = Field(None, alias='otherPhoneId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
