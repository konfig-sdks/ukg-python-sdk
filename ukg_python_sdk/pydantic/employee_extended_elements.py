# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmployeeExtendedElements(BaseModel):
    person_i_d: typing.Optional[str] = Field(None, alias='personID')

    employee_i_d: typing.Optional[str] = Field(None, alias='employeeID')

    company_i_d: typing.Optional[str] = Field(None, alias='companyID')

    community_broadcast_s_m_s_code: typing.Optional[str] = Field(None, alias='communityBroadcastSMSCode')

    consent_electronic_w2: typing.Optional[bool] = Field(None, alias='consentElectronicW2')

    consent_electronic_w2_p_r: typing.Optional[bool] = Field(None, alias='consentElectronicW2PR')

    date_deceased: typing.Optional[datetime] = Field(None, alias='dateDeceased')

    date_of_i9_expiration: typing.Optional[datetime] = Field(None, alias='dateOfI9Expiration')

    date_time_changed: typing.Optional[datetime] = Field(None, alias='dateTimeChanged')

    date_time_created: typing.Optional[datetime] = Field(None, alias='dateTimeCreated')

    i9_alien_number: typing.Optional[str] = Field(None, alias='i9AlienNumber')

    i9_doc_a: typing.Optional[str] = Field(None, alias='i9DocA')

    i9_doc_b: typing.Optional[str] = Field(None, alias='i9DocB')

    i9_doc_c: typing.Optional[str] = Field(None, alias='i9DocC')

    i9_verified: typing.Optional[bool] = Field(None, alias='i9Verified')

    i9_visa_type: typing.Optional[str] = Field(None, alias='i9VisaType')

    i9_work_auth: typing.Optional[str] = Field(None, alias='i9WorkAuth')

    is_multi_pay_group: typing.Optional[bool] = Field(None, alias='isMultiPayGroup')

    military_branch_served: typing.Optional[str] = Field(None, alias='militaryBranchServed')

    military_era: typing.Optional[str] = Field(None, alias='militaryEra')

    military_is_disabled_vet: typing.Optional[str] = Field(None, alias='militaryIsDisabledVet')

    military_is_oth_elig_vet: typing.Optional[str] = Field(None, alias='militaryIsOthEligVet')

    military_is_oth_elig_vet_basis: typing.Optional[str] = Field(None, alias='militaryIsOthEligVetBasis')

    military_is_active_wartime_vet: typing.Optional[str] = Field(None, alias='militaryIsActiveWartimeVet')

    w2_is_deceased: typing.Optional[bool] = Field(None, alias='w2IsDeceased')

    military_separation_date: typing.Optional[datetime] = Field(None, alias='militarySeparationDate')

    sms_approvals: typing.Optional[bool] = Field(None, alias='smsApprovals')

    sms_pay_notification: typing.Optional[bool] = Field(None, alias='smsPayNotification')

    chk_cashing_inst_code: typing.Optional[str] = Field(None, alias='chkCashingInstCode')

    i9_visa_expiration_date: typing.Optional[datetime] = Field(None, alias='i9VisaExpirationDate')

    military_is_medal_vet: typing.Optional[str] = Field(None, alias='militaryIsMedalVet')

    military_service: typing.Optional[str] = Field(None, alias='militaryService')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
