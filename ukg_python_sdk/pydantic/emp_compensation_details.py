# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmpCompensationDetails(BaseModel):
    employee_i_d: typing.Optional[str] = Field(None, alias='employeeID')

    company_i_d: typing.Optional[str] = Field(None, alias='companyID')

    annual_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='annualSalary')

    hourly_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='hourlyPayRate')

    weekly_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='weeklyPayRate')

    pay_period_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='payPeriodPayRate')

    currency_code: typing.Optional[str] = Field(None, alias='currencyCode')

    other_rate1: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate1')

    other_rate2: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate2')

    other_rate3: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate3')

    other_rate4: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate4')

    pay_group_description: typing.Optional[str] = Field(None, alias='payGroupDescription')

    piece_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='piecePayRate')

    primary_job_code: typing.Optional[str] = Field(None, alias='primaryJobCode')

    job_salary_grade: typing.Optional[str] = Field(None, alias='jobSalaryGrade')

    job_change_reason_code: typing.Optional[str] = Field(None, alias='jobChangeReasonCode')

    job_group_code: typing.Optional[str] = Field(None, alias='jobGroupCode')

    job_title: typing.Optional[str] = Field(None, alias='jobTitle')

    date_in_job: typing.Optional[datetime] = Field(None, alias='dateInJob')

    date_last_paid: typing.Optional[datetime] = Field(None, alias='dateLastPaid')

    date_last_worked: typing.Optional[datetime] = Field(None, alias='dateLastWorked')

    date_of_last_salary_review: typing.Optional[datetime] = Field(None, alias='dateOfLastSalaryReview')

    date_of_next_salayr_review: typing.Optional[datetime] = Field(None, alias='dateOfNextSalayrReview')

    is_auto_allocated: typing.Optional[bool] = Field(None, alias='isAutoAllocated')

    is_auto_paid: typing.Optional[bool] = Field(None, alias='isAutoPaid')

    is_seasonal_worker: typing.Optional[bool] = Field(None, alias='isSeasonalWorker')

    is_highly_compensated: typing.Optional[bool] = Field(None, alias='isHighlyCompensated')

    is_multiple_job: typing.Optional[bool] = Field(None, alias='isMultipleJob')

    pay_group_code: typing.Optional[str] = Field(None, alias='payGroupCode')

    pay_period: typing.Optional[str] = Field(None, alias='payPeriod')

    pay_scale_code: typing.Optional[str] = Field(None, alias='payScaleCode')

    salary_or_hourly_code: typing.Optional[str] = Field(None, alias='salaryOrHourlyCode')

    full_time_or_part_time_code: typing.Optional[str] = Field(None, alias='fullTimeOrPartTimeCode')

    scheduled_full_time_equivalency: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledFullTimeEquivalency')

    scheduled_period_work_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledPeriodWorkHours')

    scheduled_annual_work_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledAnnualWorkHours')

    weekly_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='weeklyHours')

    primary_shift_code: typing.Optional[str] = Field(None, alias='primaryShiftCode')

    primary_shift_group_code: typing.Optional[str] = Field(None, alias='primaryShiftGroupCode')

    avg_pay_rate_cur_per: typing.Optional[typing.Union[int, float]] = Field(None, alias='avgPayRateCurPer')

    bonus_total_hrs: typing.Optional[typing.Union[int, float]] = Field(None, alias='bonusTotalHrs')

    bonus_total_ot_hrs: typing.Optional[typing.Union[int, float]] = Field(None, alias='bonusTotalOtHrs')

    date_paid_thru: typing.Optional[datetime] = Field(None, alias='datePaidThru')

    empl_status: typing.Optional[str] = Field(None, alias='emplStatus')

    total_ann_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='totalAnnSalary')

    distribution_center_code: typing.Optional[str] = Field(None, alias='distributionCenterCode')

    number_of_payments: typing.Optional[int] = Field(None, alias='numberOfPayments')

    performance_review_rating: typing.Optional[str] = Field(None, alias='performanceReviewRating')

    performance_review_type: typing.Optional[str] = Field(None, alias='performanceReviewType')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
