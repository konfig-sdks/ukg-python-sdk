# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class InsuranceRate(BaseModel):
    deduction_code: typing.Optional[str] = Field(None, alias='deductionCode')

    minimum_age: typing.Optional[typing.Union[int, float]] = Field(None, alias='minimumAge')

    maximum_age: typing.Optional[typing.Union[int, float]] = Field(None, alias='maximumAge')

    employee_rate_non_smoker_female: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateNonSmokerFemale')

    employee_rate_non_smoker_male: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateNonSmokerMale')

    employee_rate_smoker_female: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateSmokerFemale')

    employee_rate_smoker_male: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateSmokerMale')

    effective_date: typing.Optional[datetime] = Field(None, alias='effectiveDate')

    employer_rate_non_smoker_female: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateNonSmokerFemale')

    employer_rate_non_smoker_male: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateNonSmokerMale')

    employer_rate_smoker_female: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateSmokerFemale')

    employer_rate_smoker_male: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateSmokerMale')

    pay_frequency: typing.Optional[str] = Field(None, alias='payFrequency')

    stop_date: typing.Optional[datetime] = Field(None, alias='stopDate')

    employee_rate_non_smoker_not_specified: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateNonSmokerNotSpecified')

    employee_rate_smoker_not_specified: typing.Optional[typing.Union[int, float]] = Field(None, alias='employeeRateSmokerNotSpecified')

    employer_rate_non_smoker_not_specified: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateNonSmokerNotSpecified')

    employer_rate_smoker_not_specified: typing.Optional[typing.Union[int, float]] = Field(None, alias='employerRateSmokerNotSpecified')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
