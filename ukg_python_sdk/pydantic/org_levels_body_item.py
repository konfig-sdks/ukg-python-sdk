# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class OrgLevelsBodyItem(BaseModel):
    # Organization Level Description.
    description: str = Field(alias='description')

    # Organization Code, one half of the unique identifier.
    code: str = Field(alias='code')

    # Organazation Level, one half of unique identifier. Cannot be updated.
    level: typing.Union[int, float] = Field(alias='level')

    # Organizational budget group.
    budget_group: typing.Optional[str] = Field(None, alias='budgetGroup')

    # Current year to date budget for full time employee.
    current_year_budget_f_t_e: typing.Optional[typing.Union[int, float]] = Field(None, alias='currentYearBudgetFTE')

    # Current year to date budget for salary.
    current_year_budget_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='currentYearBudgetSalary')

    # General Ledger Segment. Alpha-numeric and special characters allowed.
    gl_segment: typing.Optional[str] = Field(None, alias='glSegment')

    # Last year Budget for full time employee.
    last_year_budget_f_t_e: typing.Optional[typing.Union[int, float]] = Field(None, alias='lastYearBudgetFTE')

    # Last year Budget salary.
    last_year_budget_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='lastYearBudgetSalary')

    # Organization description. Cannot be updated.
    level_description: typing.Optional[str] = Field(None, alias='levelDescription')

    # The reporting category code.
    reporting_category: typing.Optional[str] = Field(None, alias='reportingCategory')

    # The organization level status.
    is_active: typing.Optional[bool] = Field(None, alias='isActive')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
