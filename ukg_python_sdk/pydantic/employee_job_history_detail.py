# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmployeeJobHistoryDetail(BaseModel):
    annual_salary: typing.Optional[typing.Union[int, float]] = Field(None, alias='annualSalary')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    date_time_created: typing.Optional[datetime] = Field(None, alias='dateTimeCreated')

    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    employee_type: typing.Optional[str] = Field(None, alias='employeeType')

    employee_status: typing.Optional[str] = Field(None, alias='employeeStatus')

    flsa_category: typing.Optional[str] = Field(None, alias='flsaCategory')

    full_time_or_part_time: typing.Optional[str] = Field(None, alias='fullTimeOrPartTime')

    hourly_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='hourlyPayRate')

    is_job_change: typing.Optional[bool] = Field(None, alias='isJobChange')

    is_orgchange: typing.Optional[bool] = Field(None, alias='isOrgchange')

    is_outside_guidelines: typing.Optional[bool] = Field(None, alias='isOutsideGuidelines')

    is_outside_range: typing.Optional[bool] = Field(None, alias='isOutsideRange')

    is_promotion: typing.Optional[bool] = Field(None, alias='isPromotion')

    is_rate_change: typing.Optional[bool] = Field(None, alias='isRateChange')

    is_system: typing.Optional[bool] = Field(None, alias='isSystem')

    is_transfer: typing.Optional[bool] = Field(None, alias='isTransfer')

    job_code: typing.Optional[str] = Field(None, alias='jobCode')

    job_description: typing.Optional[str] = Field(None, alias='jobDescription')

    job_effective_date: typing.Optional[datetime] = Field(None, alias='jobEffectiveDate')

    job_group_code: typing.Optional[str] = Field(None, alias='jobGroupCode')

    location_code: typing.Optional[str] = Field(None, alias='locationCode')

    org_level1_code: typing.Optional[str] = Field(None, alias='orgLevel1Code')

    org_level2_code: typing.Optional[str] = Field(None, alias='orgLevel2Code')

    org_level3_code: typing.Optional[str] = Field(None, alias='orgLevel3Code')

    org_level4_code: typing.Optional[str] = Field(None, alias='orgLevel4Code')

    other_rate1: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate1')

    other_rate2: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate2')

    other_rate3: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate3')

    other_rate4: typing.Optional[typing.Union[int, float]] = Field(None, alias='otherRate4')

    pay_group_code: typing.Optional[str] = Field(None, alias='payGroupCode')

    pay_period_code: typing.Optional[str] = Field(None, alias='payPeriodCode')

    pay_scale_code: typing.Optional[str] = Field(None, alias='payScaleCode')

    percent_change: typing.Optional[typing.Union[int, float]] = Field(None, alias='percentChange')

    period_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='periodPayRate')

    piece_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='piecePayRate')

    position_code: typing.Optional[str] = Field(None, alias='positionCode')

    reason_code: typing.Optional[str] = Field(None, alias='reasonCode')

    salary_grade: typing.Optional[str] = Field(None, alias='salaryGrade')

    salary_or_hourly: typing.Optional[str] = Field(None, alias='salaryOrHourly')

    scheduled_annual_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledAnnualHours')

    scheduled_full_time_equivalency: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledFullTimeEquivalency')

    scheduled_work_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='scheduledWorkHours')

    shift_code: typing.Optional[str] = Field(None, alias='shiftCode')

    shift_group_code: typing.Optional[str] = Field(None, alias='shiftGroupCode')

    step_number: typing.Optional[typing.Union[int, float]] = Field(None, alias='stepNumber')

    supervisor_id: typing.Optional[str] = Field(None, alias='supervisorId')

    supervisor_name_first: typing.Optional[str] = Field(None, alias='supervisorNameFirst')

    supervisor_name_last: typing.Optional[str] = Field(None, alias='supervisorNameLast')

    supervisor_name_suffix: typing.Optional[str] = Field(None, alias='supervisorNameSuffix')

    supervisor_not_in_list: typing.Optional[bool] = Field(None, alias='supervisorNotInList')

    system_id: typing.Optional[str] = Field(None, alias='systemId')

    union_national: typing.Optional[str] = Field(None, alias='unionNational')

    use_pay_scales: typing.Optional[bool] = Field(None, alias='usePayScales')

    weekly_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='weeklyPayRate')

    notes: typing.Optional[str] = Field(None, alias='notes')

    home_company_id: typing.Optional[str] = Field(None, alias='homeCompanyId')

    integration_effective_date: typing.Optional[datetime] = Field(None, alias='integrationEffectiveDate')

    project_code: typing.Optional[str] = Field(None, alias='projectCode')

    number_of_payments: typing.Optional[typing.Union[int, float]] = Field(None, alias='numberOfPayments')

    weekly_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='weeklyHours')

    is_viewable_by_employee: typing.Optional[bool] = Field(None, alias='isViewableByEmployee')

    created_by_user_id: typing.Optional[typing.Union[int, float]] = Field(None, alias='createdByUserId')

    job_title: typing.Optional[str] = Field(None, alias='jobTitle')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
