# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class DirectDepositModel(BaseModel):
    description: typing.Optional[str] = Field(None, alias='description')

    account: typing.Optional[str] = Field(None, alias='account')

    account_type: typing.Optional[str] = Field(None, alias='accountType')

    amount_or_percent: typing.Optional[typing.Union[int, float]] = Field(None, alias='amountOrPercent')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    direct_deposit_or_prenote: typing.Optional[str] = Field(None, alias='directDepositOrPrenote')

    deposit_rule: typing.Optional[str] = Field(None, alias='depositRule')

    employee_bank_id: typing.Optional[str] = Field(None, alias='employeeBankId')

    employee_bank_name: typing.Optional[str] = Field(None, alias='employeeBankName')

    employee_bank_routing_number: typing.Optional[str] = Field(None, alias='employeeBankRoutingNumber')

    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    first_prenote_pay_date: typing.Optional[datetime] = Field(None, alias='firstPrenotePayDate')

    sequence_number: typing.Optional[str] = Field(None, alias='sequenceNumber')

    employee_institution_number: typing.Optional[str] = Field(None, alias='employeeInstitutionNumber')

    country_code: typing.Optional[str] = Field(None, alias='countryCode')

    foreign_account_number: typing.Optional[str] = Field(None, alias='foreignAccountNumber')

    foreign_account_number_type: typing.Optional[str] = Field(None, alias='foreignAccountNumberType')

    account_record_id: typing.Optional[str] = Field(None, alias='accountRecordId')

    date_time_changed: typing.Optional[datetime] = Field(None, alias='dateTimeChanged')

    account_is_inactive: typing.Optional[bool] = Field(None, alias='accountIsInactive')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
