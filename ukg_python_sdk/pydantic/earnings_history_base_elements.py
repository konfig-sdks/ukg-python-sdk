# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EarningsHistoryBaseElements(BaseModel):
    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    earning_code: typing.Optional[str] = Field(None, alias='earningCode')

    employee_number: typing.Optional[str] = Field(None, alias='employeeNumber')

    gen_number: typing.Optional[str] = Field(None, alias='genNumber')

    period_control: typing.Optional[str] = Field(None, alias='periodControl')

    pay_group: typing.Optional[str] = Field(None, alias='payGroup')

    accrual_code: typing.Optional[str] = Field(None, alias='accrualCode')

    base_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='baseAmount')

    batch_i_d: typing.Optional[str] = Field(None, alias='batchID')

    calculation_rule: typing.Optional[str] = Field(None, alias='calculationRule')

    calculation_sequence: typing.Optional[str] = Field(None, alias='calculationSequence')

    current_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='currentAmount')

    current_hours: typing.Optional[typing.Union[int, float]] = Field(None, alias='currentHours')

    gl_base_segment_id: typing.Optional[str] = Field(None, alias='glBaseSegmentId')

    gl_follow_base_account_allocation: typing.Optional[str] = Field(None, alias='glFollowBaseAccountAllocation')

    gross_up: typing.Optional[str] = Field(None, alias='grossUp')

    gross_up_target: typing.Optional[typing.Union[int, float]] = Field(None, alias='grossUpTarget')

    gross_up_tax_calculation_method: typing.Optional[int] = Field(None, alias='grossUpTaxCalculationMethod')

    hourly_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='hourlyPayRate')

    include_in_deferred_compensation: typing.Optional[bool] = Field(None, alias='includeInDeferredCompensation')

    include_in_deferred_compensation_hours: typing.Optional[bool] = Field(None, alias='includeInDeferredCompensationHours')

    is_voided: typing.Optional[bool] = Field(None, alias='isVoided')

    is_voiding_record: typing.Optional[bool] = Field(None, alias='isVoidingRecord')

    job_code: typing.Optional[str] = Field(None, alias='jobCode')

    job_premium_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='jobPremiumAmount')

    job_premium_rate_or_percent: typing.Optional[typing.Union[int, float]] = Field(None, alias='jobPremiumRateOrPercent')

    location: typing.Optional[str] = Field(None, alias='location')

    number_of_days: typing.Optional[int] = Field(None, alias='numberOfDays')

    number_of_games: typing.Optional[int] = Field(None, alias='numberOfGames')

    pay_date: typing.Optional[datetime] = Field(None, alias='payDate')

    payout_rate_type: typing.Optional[str] = Field(None, alias='payoutRateType')

    pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='payRate')

    pay_sheet_i_d: typing.Optional[str] = Field(None, alias='paySheetID')

    period_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='periodPayRate')

    piece_count: typing.Optional[typing.Union[int, float]] = Field(None, alias='pieceCount')

    piece_pay_rate: typing.Optional[typing.Union[int, float]] = Field(None, alias='piecePayRate')

    plan_year: typing.Optional[str] = Field(None, alias='planYear')

    project: typing.Optional[str] = Field(None, alias='project')

    report_category: typing.Optional[str] = Field(None, alias='reportCategory')

    tax_calculation_group_id: typing.Optional[str] = Field(None, alias='taxCalculationGroupId')

    tax_category: typing.Optional[str] = Field(None, alias='taxCategory')

    time_clock_code: typing.Optional[str] = Field(None, alias='timeClockCode')

    tip_credit: typing.Optional[typing.Union[int, float]] = Field(None, alias='tipCredit')

    tip_gross_receipts: typing.Optional[typing.Union[int, float]] = Field(None, alias='tipGrossReceipts')

    tip_type: typing.Optional[str] = Field(None, alias='tipType')

    use_deduction_off_set: typing.Optional[bool] = Field(None, alias='useDeductionOffSet')

    ytd_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='ytdAmount')

    ytd_shift_amount: typing.Optional[typing.Union[int, float]] = Field(None, alias='ytdShiftAmount')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
