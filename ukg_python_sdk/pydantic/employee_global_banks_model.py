# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class EmployeeGlobalBanksModel(BaseModel):
    bank_id: typing.Optional[str] = Field(None, alias='bankId')

    employee_id: typing.Optional[str] = Field(None, alias='employeeId')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    employee_number: typing.Optional[str] = Field(None, alias='employeeNumber')

    pay_group: typing.Optional[str] = Field(None, alias='payGroup')

    currency_code: typing.Optional[str] = Field(None, alias='currencyCode')

    funding_method: typing.Optional[str] = Field(None, alias='fundingMethod')

    funding_method_description: typing.Optional[str] = Field(None, alias='fundingMethodDescription')

    address_line1: typing.Optional[str] = Field(None, alias='addressLine1')

    address_line2: typing.Optional[str] = Field(None, alias='addressLine2')

    address_line3: typing.Optional[str] = Field(None, alias='addressLine3')

    city: typing.Optional[str] = Field(None, alias='city')

    state: typing.Optional[str] = Field(None, alias='state')

    postal_code: typing.Optional[str] = Field(None, alias='postalCode')

    country: typing.Optional[str] = Field(None, alias='country')

    bank_name: typing.Optional[str] = Field(None, alias='bankName')

    bank_branch: typing.Optional[str] = Field(None, alias='bankBranch')

    bank_country_code: typing.Optional[str] = Field(None, alias='bankCountryCode')

    beneficiary_name: typing.Optional[str] = Field(None, alias='beneficiaryName')

    bank_account_type: typing.Optional[str] = Field(None, alias='bankAccountType')

    bank_account_type_description: typing.Optional[str] = Field(None, alias='bankAccountTypeDescription')

    bank_account_number: typing.Optional[str] = Field(None, alias='bankAccountNumber')

    iban: typing.Optional[str] = Field(None, alias='iban')

    swift_code: typing.Optional[str] = Field(None, alias='swiftCode')

    bank_requirement1: typing.Optional[str] = Field(None, alias='bankRequirement1')

    bank_requirement2: typing.Optional[str] = Field(None, alias='bankRequirement2')

    bank_requirement3: typing.Optional[str] = Field(None, alias='bankRequirement3')

    date_modified: typing.Optional[datetime] = Field(None, alias='dateModified')

    bank_request_code1: typing.Optional[str] = Field(None, alias='bankRequestCode1')

    bank_request_label1: typing.Optional[str] = Field(None, alias='bankRequestLabel1')

    bank_request_code2: typing.Optional[str] = Field(None, alias='bankRequestCode2')

    bank_request_label2: typing.Optional[str] = Field(None, alias='bankRequestLabel2')

    bank_request_code3: typing.Optional[str] = Field(None, alias='bankRequestCode3')

    bank_request_label3: typing.Optional[str] = Field(None, alias='bankRequestLabel3')

    employee_country: typing.Optional[str] = Field(None, alias='employeeCountry')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
