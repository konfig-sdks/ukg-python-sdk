# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from ukg_python_sdk.pydantic.positions_user_defined_field04 import PositionsUserDefinedField04

class Positions(BaseModel):
    alternate_title: typing.Optional[str] = Field(None, alias='alternateTitle')

    company_id: typing.Optional[str] = Field(None, alias='companyId')

    date_time_changed: typing.Optional[datetime] = Field(None, alias='dateTimeChanged')

    date_time_created: typing.Optional[datetime] = Field(None, alias='dateTimeCreated')

    employee_type: typing.Optional[str] = Field(None, alias='employeeType')

    effective_start_date: typing.Optional[datetime] = Field(None, alias='effectiveStartDate')

    effective_stop_date: typing.Optional[datetime] = Field(None, alias='effectiveStopDate')

    fund_i_d: typing.Optional[str] = Field(None, alias='fundID')

    gl_segment: typing.Optional[str] = Field(None, alias='glSegment')

    is_approved: typing.Optional[bool] = Field(None, alias='isApproved')

    is_eligible_for_benefits: typing.Optional[bool] = Field(None, alias='isEligibleForBenefits')

    is_prorated: typing.Optional[bool] = Field(None, alias='isProrated')

    jobcode: typing.Optional[str] = Field(None, alias='jobcode')

    location_code: typing.Optional[str] = Field(None, alias='locationCode')

    notes: typing.Optional[str] = Field(None, alias='notes')

    organization_level_code1: typing.Optional[str] = Field(None, alias='organizationLevelCode1')

    organization_level_code2: typing.Optional[str] = Field(None, alias='organizationLevelCode2')

    organization_level_code3: typing.Optional[str] = Field(None, alias='organizationLevelCode3')

    organization_level_code4: typing.Optional[str] = Field(None, alias='organizationLevelCode4')

    overstaffing_allowed: typing.Optional[bool] = Field(None, alias='overstaffingAllowed')

    pay_group_code: typing.Optional[str] = Field(None, alias='payGroupCode')

    position_code: typing.Optional[str] = Field(None, alias='positionCode')

    project_code: typing.Optional[str] = Field(None, alias='projectCode')

    shift_group_code: typing.Optional[str] = Field(None, alias='shiftGroupCode')

    status_code: typing.Optional[str] = Field(None, alias='statusCode')

    status_as_of_date: typing.Optional[datetime] = Field(None, alias='statusAsOfDate')

    user_defined_field01: typing.Optional[str] = Field(None, alias='userDefinedField01')

    user_defined_field02: typing.Optional[datetime] = Field(None, alias='userDefinedField02')

    user_defined_field03: typing.Optional[typing.Union[int, float]] = Field(None, alias='userDefinedField03')

    user_defined_field04: typing.Optional[PositionsUserDefinedField04] = Field(None, alias='userDefinedField04')

    integration_record_id: typing.Optional[str] = Field(None, alias='integrationRecordId')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
