# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class EmployeeSecurityUserDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            userID = schemas.StrSchema
            userName = schemas.StrSchema
            fullName = schemas.StrSchema
            employeeId = schemas.StrSchema
            passwordLastChanged = schemas.StrSchema
            lastLogon = schemas.StrSchema
            __annotations__ = {
                "userID": userID,
                "userName": userName,
                "fullName": fullName,
                "employeeId": employeeId,
                "passwordLastChanged": passwordLastChanged,
                "lastLogon": lastLogon,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userID"]) -> MetaOapg.properties.userID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userName"]) -> MetaOapg.properties.userName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullName"]) -> MetaOapg.properties.fullName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeId"]) -> MetaOapg.properties.employeeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["passwordLastChanged"]) -> MetaOapg.properties.passwordLastChanged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastLogon"]) -> MetaOapg.properties.lastLogon: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["userID", "userName", "fullName", "employeeId", "passwordLastChanged", "lastLogon", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userID"]) -> typing.Union[MetaOapg.properties.userID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userName"]) -> typing.Union[MetaOapg.properties.userName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullName"]) -> typing.Union[MetaOapg.properties.fullName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeId"]) -> typing.Union[MetaOapg.properties.employeeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["passwordLastChanged"]) -> typing.Union[MetaOapg.properties.passwordLastChanged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastLogon"]) -> typing.Union[MetaOapg.properties.lastLogon, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["userID", "userName", "fullName", "employeeId", "passwordLastChanged", "lastLogon", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        userID: typing.Union[MetaOapg.properties.userID, str, schemas.Unset] = schemas.unset,
        userName: typing.Union[MetaOapg.properties.userName, str, schemas.Unset] = schemas.unset,
        fullName: typing.Union[MetaOapg.properties.fullName, str, schemas.Unset] = schemas.unset,
        employeeId: typing.Union[MetaOapg.properties.employeeId, str, schemas.Unset] = schemas.unset,
        passwordLastChanged: typing.Union[MetaOapg.properties.passwordLastChanged, str, schemas.Unset] = schemas.unset,
        lastLogon: typing.Union[MetaOapg.properties.lastLogon, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeeSecurityUserDetails':
        return super().__new__(
            cls,
            *args,
            userID=userID,
            userName=userName,
            fullName=fullName,
            employeeId=employeeId,
            passwordLastChanged=passwordLastChanged,
            lastLogon=lastLogon,
            _configuration=_configuration,
            **kwargs,
        )
