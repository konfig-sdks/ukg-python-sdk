# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class NewHirePostModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def contactInformation() -> typing.Type['NewHirePostModelContactInformation']:
                return NewHirePostModelContactInformation
        
            @staticmethod
            def job() -> typing.Type['NewHirePostModelJob']:
                return NewHirePostModelJob
        
            @staticmethod
            def organizationLevels() -> typing.Type['NewHirePostModelOrganizationLevels']:
                return NewHirePostModelOrganizationLevels
        
            @staticmethod
            def compensation() -> typing.Type['NewHirePostModelCompensation']:
                return NewHirePostModelCompensation
            onboardingOwnerId = schemas.StrSchema
            hireDate = schemas.DateTimeSchema
            orientationDate = schemas.DateTimeSchema
            startDate = schemas.DateTimeSchema
            
            
            class pastStartDateReason(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 250
        
            @staticmethod
            def mentor() -> typing.Type['NewHirePostModelMentor']:
                return NewHirePostModelMentor
            
            
            class personalMessage(
                schemas.StrSchema
            ):
            
            
                class MetaOapg:
                    max_length = 250
            __annotations__ = {
                "contactInformation": contactInformation,
                "job": job,
                "organizationLevels": organizationLevels,
                "compensation": compensation,
                "onboardingOwnerId": onboardingOwnerId,
                "hireDate": hireDate,
                "orientationDate": orientationDate,
                "startDate": startDate,
                "pastStartDateReason": pastStartDateReason,
                "mentor": mentor,
                "personalMessage": personalMessage,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["contactInformation"]) -> 'NewHirePostModelContactInformation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["job"]) -> 'NewHirePostModelJob': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["organizationLevels"]) -> 'NewHirePostModelOrganizationLevels': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["compensation"]) -> 'NewHirePostModelCompensation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["onboardingOwnerId"]) -> MetaOapg.properties.onboardingOwnerId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hireDate"]) -> MetaOapg.properties.hireDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orientationDate"]) -> MetaOapg.properties.orientationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["startDate"]) -> MetaOapg.properties.startDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pastStartDateReason"]) -> MetaOapg.properties.pastStartDateReason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["mentor"]) -> 'NewHirePostModelMentor': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["personalMessage"]) -> MetaOapg.properties.personalMessage: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["contactInformation", "job", "organizationLevels", "compensation", "onboardingOwnerId", "hireDate", "orientationDate", "startDate", "pastStartDateReason", "mentor", "personalMessage", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["contactInformation"]) -> typing.Union['NewHirePostModelContactInformation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["job"]) -> typing.Union['NewHirePostModelJob', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["organizationLevels"]) -> typing.Union['NewHirePostModelOrganizationLevels', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["compensation"]) -> typing.Union['NewHirePostModelCompensation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["onboardingOwnerId"]) -> typing.Union[MetaOapg.properties.onboardingOwnerId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hireDate"]) -> typing.Union[MetaOapg.properties.hireDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orientationDate"]) -> typing.Union[MetaOapg.properties.orientationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["startDate"]) -> typing.Union[MetaOapg.properties.startDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pastStartDateReason"]) -> typing.Union[MetaOapg.properties.pastStartDateReason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["mentor"]) -> typing.Union['NewHirePostModelMentor', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["personalMessage"]) -> typing.Union[MetaOapg.properties.personalMessage, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["contactInformation", "job", "organizationLevels", "compensation", "onboardingOwnerId", "hireDate", "orientationDate", "startDate", "pastStartDateReason", "mentor", "personalMessage", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        contactInformation: typing.Union['NewHirePostModelContactInformation', schemas.Unset] = schemas.unset,
        job: typing.Union['NewHirePostModelJob', schemas.Unset] = schemas.unset,
        organizationLevels: typing.Union['NewHirePostModelOrganizationLevels', schemas.Unset] = schemas.unset,
        compensation: typing.Union['NewHirePostModelCompensation', schemas.Unset] = schemas.unset,
        onboardingOwnerId: typing.Union[MetaOapg.properties.onboardingOwnerId, str, schemas.Unset] = schemas.unset,
        hireDate: typing.Union[MetaOapg.properties.hireDate, str, datetime, schemas.Unset] = schemas.unset,
        orientationDate: typing.Union[MetaOapg.properties.orientationDate, str, datetime, schemas.Unset] = schemas.unset,
        startDate: typing.Union[MetaOapg.properties.startDate, str, datetime, schemas.Unset] = schemas.unset,
        pastStartDateReason: typing.Union[MetaOapg.properties.pastStartDateReason, str, schemas.Unset] = schemas.unset,
        mentor: typing.Union['NewHirePostModelMentor', schemas.Unset] = schemas.unset,
        personalMessage: typing.Union[MetaOapg.properties.personalMessage, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'NewHirePostModel':
        return super().__new__(
            cls,
            *args,
            contactInformation=contactInformation,
            job=job,
            organizationLevels=organizationLevels,
            compensation=compensation,
            onboardingOwnerId=onboardingOwnerId,
            hireDate=hireDate,
            orientationDate=orientationDate,
            startDate=startDate,
            pastStartDateReason=pastStartDateReason,
            mentor=mentor,
            personalMessage=personalMessage,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.new_hire_post_model_compensation import NewHirePostModelCompensation
from ukg_python_sdk.model.new_hire_post_model_contact_information import NewHirePostModelContactInformation
from ukg_python_sdk.model.new_hire_post_model_job import NewHirePostModelJob
from ukg_python_sdk.model.new_hire_post_model_mentor import NewHirePostModelMentor
from ukg_python_sdk.model.new_hire_post_model_organization_levels import NewHirePostModelOrganizationLevels
