# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class EmployeeJobHistoryDetail(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            annualSalary = schemas.Float64Schema
            companyId = schemas.StrSchema
            dateTimeCreated = schemas.DateTimeSchema
            employeeId = schemas.StrSchema
            employeeType = schemas.StrSchema
            employeeStatus = schemas.StrSchema
            flsaCategory = schemas.StrSchema
            fullTimeOrPartTime = schemas.StrSchema
            hourlyPayRate = schemas.Float64Schema
            isJobChange = schemas.BoolSchema
            isOrgchange = schemas.BoolSchema
            isOutsideGuidelines = schemas.BoolSchema
            isOutsideRange = schemas.BoolSchema
            isPromotion = schemas.BoolSchema
            isRateChange = schemas.BoolSchema
            isSystem = schemas.BoolSchema
            isTransfer = schemas.BoolSchema
            jobCode = schemas.StrSchema
            jobDescription = schemas.StrSchema
            jobEffectiveDate = schemas.DateTimeSchema
            jobGroupCode = schemas.StrSchema
            locationCode = schemas.StrSchema
            orgLevel1Code = schemas.StrSchema
            orgLevel2Code = schemas.StrSchema
            orgLevel3Code = schemas.StrSchema
            orgLevel4Code = schemas.StrSchema
            otherRate1 = schemas.Float64Schema
            otherRate2 = schemas.Float64Schema
            otherRate3 = schemas.Float64Schema
            otherRate4 = schemas.Float64Schema
            payGroupCode = schemas.StrSchema
            payPeriodCode = schemas.StrSchema
            payScaleCode = schemas.StrSchema
            percentChange = schemas.Float64Schema
            periodPayRate = schemas.Float64Schema
            piecePayRate = schemas.Float64Schema
            positionCode = schemas.StrSchema
            reasonCode = schemas.StrSchema
            salaryGrade = schemas.StrSchema
            salaryOrHourly = schemas.StrSchema
            scheduledAnnualHours = schemas.Float64Schema
            scheduledFullTimeEquivalency = schemas.Float64Schema
            scheduledWorkHours = schemas.Float64Schema
            shiftCode = schemas.StrSchema
            shiftGroupCode = schemas.StrSchema
            stepNumber = schemas.Float64Schema
            supervisorId = schemas.StrSchema
            supervisorNameFirst = schemas.StrSchema
            supervisorNameLast = schemas.StrSchema
            supervisorNameSuffix = schemas.StrSchema
            supervisorNotInList = schemas.BoolSchema
            systemId = schemas.StrSchema
            unionNational = schemas.StrSchema
            usePayScales = schemas.BoolSchema
            weeklyPayRate = schemas.Float64Schema
            notes = schemas.StrSchema
            homeCompanyId = schemas.StrSchema
            integrationEffectiveDate = schemas.DateTimeSchema
            projectCode = schemas.StrSchema
            numberOfPayments = schemas.Float64Schema
            weeklyHours = schemas.Float64Schema
            isViewableByEmployee = schemas.BoolSchema
            createdByUserId = schemas.Float64Schema
            jobTitle = schemas.StrSchema
            __annotations__ = {
                "annualSalary": annualSalary,
                "companyId": companyId,
                "dateTimeCreated": dateTimeCreated,
                "employeeId": employeeId,
                "employeeType": employeeType,
                "employeeStatus": employeeStatus,
                "flsaCategory": flsaCategory,
                "fullTimeOrPartTime": fullTimeOrPartTime,
                "hourlyPayRate": hourlyPayRate,
                "isJobChange": isJobChange,
                "isOrgchange": isOrgchange,
                "isOutsideGuidelines": isOutsideGuidelines,
                "isOutsideRange": isOutsideRange,
                "isPromotion": isPromotion,
                "isRateChange": isRateChange,
                "isSystem": isSystem,
                "isTransfer": isTransfer,
                "jobCode": jobCode,
                "jobDescription": jobDescription,
                "jobEffectiveDate": jobEffectiveDate,
                "jobGroupCode": jobGroupCode,
                "locationCode": locationCode,
                "orgLevel1Code": orgLevel1Code,
                "orgLevel2Code": orgLevel2Code,
                "orgLevel3Code": orgLevel3Code,
                "orgLevel4Code": orgLevel4Code,
                "otherRate1": otherRate1,
                "otherRate2": otherRate2,
                "otherRate3": otherRate3,
                "otherRate4": otherRate4,
                "payGroupCode": payGroupCode,
                "payPeriodCode": payPeriodCode,
                "payScaleCode": payScaleCode,
                "percentChange": percentChange,
                "periodPayRate": periodPayRate,
                "piecePayRate": piecePayRate,
                "positionCode": positionCode,
                "reasonCode": reasonCode,
                "salaryGrade": salaryGrade,
                "salaryOrHourly": salaryOrHourly,
                "scheduledAnnualHours": scheduledAnnualHours,
                "scheduledFullTimeEquivalency": scheduledFullTimeEquivalency,
                "scheduledWorkHours": scheduledWorkHours,
                "shiftCode": shiftCode,
                "shiftGroupCode": shiftGroupCode,
                "stepNumber": stepNumber,
                "supervisorId": supervisorId,
                "supervisorNameFirst": supervisorNameFirst,
                "supervisorNameLast": supervisorNameLast,
                "supervisorNameSuffix": supervisorNameSuffix,
                "supervisorNotInList": supervisorNotInList,
                "systemId": systemId,
                "unionNational": unionNational,
                "usePayScales": usePayScales,
                "weeklyPayRate": weeklyPayRate,
                "notes": notes,
                "homeCompanyId": homeCompanyId,
                "integrationEffectiveDate": integrationEffectiveDate,
                "projectCode": projectCode,
                "numberOfPayments": numberOfPayments,
                "weeklyHours": weeklyHours,
                "isViewableByEmployee": isViewableByEmployee,
                "createdByUserId": createdByUserId,
                "jobTitle": jobTitle,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["annualSalary"]) -> MetaOapg.properties.annualSalary: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyId"]) -> MetaOapg.properties.companyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateTimeCreated"]) -> MetaOapg.properties.dateTimeCreated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeId"]) -> MetaOapg.properties.employeeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeType"]) -> MetaOapg.properties.employeeType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeStatus"]) -> MetaOapg.properties.employeeStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["flsaCategory"]) -> MetaOapg.properties.flsaCategory: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fullTimeOrPartTime"]) -> MetaOapg.properties.fullTimeOrPartTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["hourlyPayRate"]) -> MetaOapg.properties.hourlyPayRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isJobChange"]) -> MetaOapg.properties.isJobChange: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isOrgchange"]) -> MetaOapg.properties.isOrgchange: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isOutsideGuidelines"]) -> MetaOapg.properties.isOutsideGuidelines: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isOutsideRange"]) -> MetaOapg.properties.isOutsideRange: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isPromotion"]) -> MetaOapg.properties.isPromotion: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isRateChange"]) -> MetaOapg.properties.isRateChange: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isSystem"]) -> MetaOapg.properties.isSystem: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isTransfer"]) -> MetaOapg.properties.isTransfer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobCode"]) -> MetaOapg.properties.jobCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobDescription"]) -> MetaOapg.properties.jobDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobEffectiveDate"]) -> MetaOapg.properties.jobEffectiveDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobGroupCode"]) -> MetaOapg.properties.jobGroupCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["locationCode"]) -> MetaOapg.properties.locationCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orgLevel1Code"]) -> MetaOapg.properties.orgLevel1Code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orgLevel2Code"]) -> MetaOapg.properties.orgLevel2Code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orgLevel3Code"]) -> MetaOapg.properties.orgLevel3Code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orgLevel4Code"]) -> MetaOapg.properties.orgLevel4Code: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherRate1"]) -> MetaOapg.properties.otherRate1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherRate2"]) -> MetaOapg.properties.otherRate2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherRate3"]) -> MetaOapg.properties.otherRate3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["otherRate4"]) -> MetaOapg.properties.otherRate4: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payGroupCode"]) -> MetaOapg.properties.payGroupCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payPeriodCode"]) -> MetaOapg.properties.payPeriodCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payScaleCode"]) -> MetaOapg.properties.payScaleCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["percentChange"]) -> MetaOapg.properties.percentChange: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["periodPayRate"]) -> MetaOapg.properties.periodPayRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["piecePayRate"]) -> MetaOapg.properties.piecePayRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["positionCode"]) -> MetaOapg.properties.positionCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["reasonCode"]) -> MetaOapg.properties.reasonCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salaryGrade"]) -> MetaOapg.properties.salaryGrade: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["salaryOrHourly"]) -> MetaOapg.properties.salaryOrHourly: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scheduledAnnualHours"]) -> MetaOapg.properties.scheduledAnnualHours: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scheduledFullTimeEquivalency"]) -> MetaOapg.properties.scheduledFullTimeEquivalency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["scheduledWorkHours"]) -> MetaOapg.properties.scheduledWorkHours: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shiftCode"]) -> MetaOapg.properties.shiftCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["shiftGroupCode"]) -> MetaOapg.properties.shiftGroupCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["stepNumber"]) -> MetaOapg.properties.stepNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorId"]) -> MetaOapg.properties.supervisorId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorNameFirst"]) -> MetaOapg.properties.supervisorNameFirst: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorNameLast"]) -> MetaOapg.properties.supervisorNameLast: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorNameSuffix"]) -> MetaOapg.properties.supervisorNameSuffix: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorNotInList"]) -> MetaOapg.properties.supervisorNotInList: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["systemId"]) -> MetaOapg.properties.systemId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["unionNational"]) -> MetaOapg.properties.unionNational: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["usePayScales"]) -> MetaOapg.properties.usePayScales: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["weeklyPayRate"]) -> MetaOapg.properties.weeklyPayRate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["notes"]) -> MetaOapg.properties.notes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["homeCompanyId"]) -> MetaOapg.properties.homeCompanyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["integrationEffectiveDate"]) -> MetaOapg.properties.integrationEffectiveDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["projectCode"]) -> MetaOapg.properties.projectCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["numberOfPayments"]) -> MetaOapg.properties.numberOfPayments: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["weeklyHours"]) -> MetaOapg.properties.weeklyHours: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isViewableByEmployee"]) -> MetaOapg.properties.isViewableByEmployee: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdByUserId"]) -> MetaOapg.properties.createdByUserId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobTitle"]) -> MetaOapg.properties.jobTitle: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["annualSalary", "companyId", "dateTimeCreated", "employeeId", "employeeType", "employeeStatus", "flsaCategory", "fullTimeOrPartTime", "hourlyPayRate", "isJobChange", "isOrgchange", "isOutsideGuidelines", "isOutsideRange", "isPromotion", "isRateChange", "isSystem", "isTransfer", "jobCode", "jobDescription", "jobEffectiveDate", "jobGroupCode", "locationCode", "orgLevel1Code", "orgLevel2Code", "orgLevel3Code", "orgLevel4Code", "otherRate1", "otherRate2", "otherRate3", "otherRate4", "payGroupCode", "payPeriodCode", "payScaleCode", "percentChange", "periodPayRate", "piecePayRate", "positionCode", "reasonCode", "salaryGrade", "salaryOrHourly", "scheduledAnnualHours", "scheduledFullTimeEquivalency", "scheduledWorkHours", "shiftCode", "shiftGroupCode", "stepNumber", "supervisorId", "supervisorNameFirst", "supervisorNameLast", "supervisorNameSuffix", "supervisorNotInList", "systemId", "unionNational", "usePayScales", "weeklyPayRate", "notes", "homeCompanyId", "integrationEffectiveDate", "projectCode", "numberOfPayments", "weeklyHours", "isViewableByEmployee", "createdByUserId", "jobTitle", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["annualSalary"]) -> typing.Union[MetaOapg.properties.annualSalary, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyId"]) -> typing.Union[MetaOapg.properties.companyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateTimeCreated"]) -> typing.Union[MetaOapg.properties.dateTimeCreated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeId"]) -> typing.Union[MetaOapg.properties.employeeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeType"]) -> typing.Union[MetaOapg.properties.employeeType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeStatus"]) -> typing.Union[MetaOapg.properties.employeeStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["flsaCategory"]) -> typing.Union[MetaOapg.properties.flsaCategory, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fullTimeOrPartTime"]) -> typing.Union[MetaOapg.properties.fullTimeOrPartTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["hourlyPayRate"]) -> typing.Union[MetaOapg.properties.hourlyPayRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isJobChange"]) -> typing.Union[MetaOapg.properties.isJobChange, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isOrgchange"]) -> typing.Union[MetaOapg.properties.isOrgchange, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isOutsideGuidelines"]) -> typing.Union[MetaOapg.properties.isOutsideGuidelines, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isOutsideRange"]) -> typing.Union[MetaOapg.properties.isOutsideRange, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isPromotion"]) -> typing.Union[MetaOapg.properties.isPromotion, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isRateChange"]) -> typing.Union[MetaOapg.properties.isRateChange, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isSystem"]) -> typing.Union[MetaOapg.properties.isSystem, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isTransfer"]) -> typing.Union[MetaOapg.properties.isTransfer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobCode"]) -> typing.Union[MetaOapg.properties.jobCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobDescription"]) -> typing.Union[MetaOapg.properties.jobDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobEffectiveDate"]) -> typing.Union[MetaOapg.properties.jobEffectiveDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobGroupCode"]) -> typing.Union[MetaOapg.properties.jobGroupCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["locationCode"]) -> typing.Union[MetaOapg.properties.locationCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orgLevel1Code"]) -> typing.Union[MetaOapg.properties.orgLevel1Code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orgLevel2Code"]) -> typing.Union[MetaOapg.properties.orgLevel2Code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orgLevel3Code"]) -> typing.Union[MetaOapg.properties.orgLevel3Code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orgLevel4Code"]) -> typing.Union[MetaOapg.properties.orgLevel4Code, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherRate1"]) -> typing.Union[MetaOapg.properties.otherRate1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherRate2"]) -> typing.Union[MetaOapg.properties.otherRate2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherRate3"]) -> typing.Union[MetaOapg.properties.otherRate3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["otherRate4"]) -> typing.Union[MetaOapg.properties.otherRate4, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payGroupCode"]) -> typing.Union[MetaOapg.properties.payGroupCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payPeriodCode"]) -> typing.Union[MetaOapg.properties.payPeriodCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payScaleCode"]) -> typing.Union[MetaOapg.properties.payScaleCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["percentChange"]) -> typing.Union[MetaOapg.properties.percentChange, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["periodPayRate"]) -> typing.Union[MetaOapg.properties.periodPayRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["piecePayRate"]) -> typing.Union[MetaOapg.properties.piecePayRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["positionCode"]) -> typing.Union[MetaOapg.properties.positionCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["reasonCode"]) -> typing.Union[MetaOapg.properties.reasonCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salaryGrade"]) -> typing.Union[MetaOapg.properties.salaryGrade, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["salaryOrHourly"]) -> typing.Union[MetaOapg.properties.salaryOrHourly, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scheduledAnnualHours"]) -> typing.Union[MetaOapg.properties.scheduledAnnualHours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scheduledFullTimeEquivalency"]) -> typing.Union[MetaOapg.properties.scheduledFullTimeEquivalency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["scheduledWorkHours"]) -> typing.Union[MetaOapg.properties.scheduledWorkHours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shiftCode"]) -> typing.Union[MetaOapg.properties.shiftCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["shiftGroupCode"]) -> typing.Union[MetaOapg.properties.shiftGroupCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["stepNumber"]) -> typing.Union[MetaOapg.properties.stepNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorId"]) -> typing.Union[MetaOapg.properties.supervisorId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorNameFirst"]) -> typing.Union[MetaOapg.properties.supervisorNameFirst, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorNameLast"]) -> typing.Union[MetaOapg.properties.supervisorNameLast, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorNameSuffix"]) -> typing.Union[MetaOapg.properties.supervisorNameSuffix, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorNotInList"]) -> typing.Union[MetaOapg.properties.supervisorNotInList, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["systemId"]) -> typing.Union[MetaOapg.properties.systemId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["unionNational"]) -> typing.Union[MetaOapg.properties.unionNational, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["usePayScales"]) -> typing.Union[MetaOapg.properties.usePayScales, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["weeklyPayRate"]) -> typing.Union[MetaOapg.properties.weeklyPayRate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["notes"]) -> typing.Union[MetaOapg.properties.notes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["homeCompanyId"]) -> typing.Union[MetaOapg.properties.homeCompanyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["integrationEffectiveDate"]) -> typing.Union[MetaOapg.properties.integrationEffectiveDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["projectCode"]) -> typing.Union[MetaOapg.properties.projectCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["numberOfPayments"]) -> typing.Union[MetaOapg.properties.numberOfPayments, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["weeklyHours"]) -> typing.Union[MetaOapg.properties.weeklyHours, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isViewableByEmployee"]) -> typing.Union[MetaOapg.properties.isViewableByEmployee, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdByUserId"]) -> typing.Union[MetaOapg.properties.createdByUserId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobTitle"]) -> typing.Union[MetaOapg.properties.jobTitle, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["annualSalary", "companyId", "dateTimeCreated", "employeeId", "employeeType", "employeeStatus", "flsaCategory", "fullTimeOrPartTime", "hourlyPayRate", "isJobChange", "isOrgchange", "isOutsideGuidelines", "isOutsideRange", "isPromotion", "isRateChange", "isSystem", "isTransfer", "jobCode", "jobDescription", "jobEffectiveDate", "jobGroupCode", "locationCode", "orgLevel1Code", "orgLevel2Code", "orgLevel3Code", "orgLevel4Code", "otherRate1", "otherRate2", "otherRate3", "otherRate4", "payGroupCode", "payPeriodCode", "payScaleCode", "percentChange", "periodPayRate", "piecePayRate", "positionCode", "reasonCode", "salaryGrade", "salaryOrHourly", "scheduledAnnualHours", "scheduledFullTimeEquivalency", "scheduledWorkHours", "shiftCode", "shiftGroupCode", "stepNumber", "supervisorId", "supervisorNameFirst", "supervisorNameLast", "supervisorNameSuffix", "supervisorNotInList", "systemId", "unionNational", "usePayScales", "weeklyPayRate", "notes", "homeCompanyId", "integrationEffectiveDate", "projectCode", "numberOfPayments", "weeklyHours", "isViewableByEmployee", "createdByUserId", "jobTitle", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        annualSalary: typing.Union[MetaOapg.properties.annualSalary, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        companyId: typing.Union[MetaOapg.properties.companyId, str, schemas.Unset] = schemas.unset,
        dateTimeCreated: typing.Union[MetaOapg.properties.dateTimeCreated, str, datetime, schemas.Unset] = schemas.unset,
        employeeId: typing.Union[MetaOapg.properties.employeeId, str, schemas.Unset] = schemas.unset,
        employeeType: typing.Union[MetaOapg.properties.employeeType, str, schemas.Unset] = schemas.unset,
        employeeStatus: typing.Union[MetaOapg.properties.employeeStatus, str, schemas.Unset] = schemas.unset,
        flsaCategory: typing.Union[MetaOapg.properties.flsaCategory, str, schemas.Unset] = schemas.unset,
        fullTimeOrPartTime: typing.Union[MetaOapg.properties.fullTimeOrPartTime, str, schemas.Unset] = schemas.unset,
        hourlyPayRate: typing.Union[MetaOapg.properties.hourlyPayRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        isJobChange: typing.Union[MetaOapg.properties.isJobChange, bool, schemas.Unset] = schemas.unset,
        isOrgchange: typing.Union[MetaOapg.properties.isOrgchange, bool, schemas.Unset] = schemas.unset,
        isOutsideGuidelines: typing.Union[MetaOapg.properties.isOutsideGuidelines, bool, schemas.Unset] = schemas.unset,
        isOutsideRange: typing.Union[MetaOapg.properties.isOutsideRange, bool, schemas.Unset] = schemas.unset,
        isPromotion: typing.Union[MetaOapg.properties.isPromotion, bool, schemas.Unset] = schemas.unset,
        isRateChange: typing.Union[MetaOapg.properties.isRateChange, bool, schemas.Unset] = schemas.unset,
        isSystem: typing.Union[MetaOapg.properties.isSystem, bool, schemas.Unset] = schemas.unset,
        isTransfer: typing.Union[MetaOapg.properties.isTransfer, bool, schemas.Unset] = schemas.unset,
        jobCode: typing.Union[MetaOapg.properties.jobCode, str, schemas.Unset] = schemas.unset,
        jobDescription: typing.Union[MetaOapg.properties.jobDescription, str, schemas.Unset] = schemas.unset,
        jobEffectiveDate: typing.Union[MetaOapg.properties.jobEffectiveDate, str, datetime, schemas.Unset] = schemas.unset,
        jobGroupCode: typing.Union[MetaOapg.properties.jobGroupCode, str, schemas.Unset] = schemas.unset,
        locationCode: typing.Union[MetaOapg.properties.locationCode, str, schemas.Unset] = schemas.unset,
        orgLevel1Code: typing.Union[MetaOapg.properties.orgLevel1Code, str, schemas.Unset] = schemas.unset,
        orgLevel2Code: typing.Union[MetaOapg.properties.orgLevel2Code, str, schemas.Unset] = schemas.unset,
        orgLevel3Code: typing.Union[MetaOapg.properties.orgLevel3Code, str, schemas.Unset] = schemas.unset,
        orgLevel4Code: typing.Union[MetaOapg.properties.orgLevel4Code, str, schemas.Unset] = schemas.unset,
        otherRate1: typing.Union[MetaOapg.properties.otherRate1, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        otherRate2: typing.Union[MetaOapg.properties.otherRate2, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        otherRate3: typing.Union[MetaOapg.properties.otherRate3, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        otherRate4: typing.Union[MetaOapg.properties.otherRate4, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        payGroupCode: typing.Union[MetaOapg.properties.payGroupCode, str, schemas.Unset] = schemas.unset,
        payPeriodCode: typing.Union[MetaOapg.properties.payPeriodCode, str, schemas.Unset] = schemas.unset,
        payScaleCode: typing.Union[MetaOapg.properties.payScaleCode, str, schemas.Unset] = schemas.unset,
        percentChange: typing.Union[MetaOapg.properties.percentChange, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        periodPayRate: typing.Union[MetaOapg.properties.periodPayRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        piecePayRate: typing.Union[MetaOapg.properties.piecePayRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        positionCode: typing.Union[MetaOapg.properties.positionCode, str, schemas.Unset] = schemas.unset,
        reasonCode: typing.Union[MetaOapg.properties.reasonCode, str, schemas.Unset] = schemas.unset,
        salaryGrade: typing.Union[MetaOapg.properties.salaryGrade, str, schemas.Unset] = schemas.unset,
        salaryOrHourly: typing.Union[MetaOapg.properties.salaryOrHourly, str, schemas.Unset] = schemas.unset,
        scheduledAnnualHours: typing.Union[MetaOapg.properties.scheduledAnnualHours, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        scheduledFullTimeEquivalency: typing.Union[MetaOapg.properties.scheduledFullTimeEquivalency, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        scheduledWorkHours: typing.Union[MetaOapg.properties.scheduledWorkHours, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        shiftCode: typing.Union[MetaOapg.properties.shiftCode, str, schemas.Unset] = schemas.unset,
        shiftGroupCode: typing.Union[MetaOapg.properties.shiftGroupCode, str, schemas.Unset] = schemas.unset,
        stepNumber: typing.Union[MetaOapg.properties.stepNumber, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        supervisorId: typing.Union[MetaOapg.properties.supervisorId, str, schemas.Unset] = schemas.unset,
        supervisorNameFirst: typing.Union[MetaOapg.properties.supervisorNameFirst, str, schemas.Unset] = schemas.unset,
        supervisorNameLast: typing.Union[MetaOapg.properties.supervisorNameLast, str, schemas.Unset] = schemas.unset,
        supervisorNameSuffix: typing.Union[MetaOapg.properties.supervisorNameSuffix, str, schemas.Unset] = schemas.unset,
        supervisorNotInList: typing.Union[MetaOapg.properties.supervisorNotInList, bool, schemas.Unset] = schemas.unset,
        systemId: typing.Union[MetaOapg.properties.systemId, str, schemas.Unset] = schemas.unset,
        unionNational: typing.Union[MetaOapg.properties.unionNational, str, schemas.Unset] = schemas.unset,
        usePayScales: typing.Union[MetaOapg.properties.usePayScales, bool, schemas.Unset] = schemas.unset,
        weeklyPayRate: typing.Union[MetaOapg.properties.weeklyPayRate, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        notes: typing.Union[MetaOapg.properties.notes, str, schemas.Unset] = schemas.unset,
        homeCompanyId: typing.Union[MetaOapg.properties.homeCompanyId, str, schemas.Unset] = schemas.unset,
        integrationEffectiveDate: typing.Union[MetaOapg.properties.integrationEffectiveDate, str, datetime, schemas.Unset] = schemas.unset,
        projectCode: typing.Union[MetaOapg.properties.projectCode, str, schemas.Unset] = schemas.unset,
        numberOfPayments: typing.Union[MetaOapg.properties.numberOfPayments, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        weeklyHours: typing.Union[MetaOapg.properties.weeklyHours, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        isViewableByEmployee: typing.Union[MetaOapg.properties.isViewableByEmployee, bool, schemas.Unset] = schemas.unset,
        createdByUserId: typing.Union[MetaOapg.properties.createdByUserId, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        jobTitle: typing.Union[MetaOapg.properties.jobTitle, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeeJobHistoryDetail':
        return super().__new__(
            cls,
            *args,
            annualSalary=annualSalary,
            companyId=companyId,
            dateTimeCreated=dateTimeCreated,
            employeeId=employeeId,
            employeeType=employeeType,
            employeeStatus=employeeStatus,
            flsaCategory=flsaCategory,
            fullTimeOrPartTime=fullTimeOrPartTime,
            hourlyPayRate=hourlyPayRate,
            isJobChange=isJobChange,
            isOrgchange=isOrgchange,
            isOutsideGuidelines=isOutsideGuidelines,
            isOutsideRange=isOutsideRange,
            isPromotion=isPromotion,
            isRateChange=isRateChange,
            isSystem=isSystem,
            isTransfer=isTransfer,
            jobCode=jobCode,
            jobDescription=jobDescription,
            jobEffectiveDate=jobEffectiveDate,
            jobGroupCode=jobGroupCode,
            locationCode=locationCode,
            orgLevel1Code=orgLevel1Code,
            orgLevel2Code=orgLevel2Code,
            orgLevel3Code=orgLevel3Code,
            orgLevel4Code=orgLevel4Code,
            otherRate1=otherRate1,
            otherRate2=otherRate2,
            otherRate3=otherRate3,
            otherRate4=otherRate4,
            payGroupCode=payGroupCode,
            payPeriodCode=payPeriodCode,
            payScaleCode=payScaleCode,
            percentChange=percentChange,
            periodPayRate=periodPayRate,
            piecePayRate=piecePayRate,
            positionCode=positionCode,
            reasonCode=reasonCode,
            salaryGrade=salaryGrade,
            salaryOrHourly=salaryOrHourly,
            scheduledAnnualHours=scheduledAnnualHours,
            scheduledFullTimeEquivalency=scheduledFullTimeEquivalency,
            scheduledWorkHours=scheduledWorkHours,
            shiftCode=shiftCode,
            shiftGroupCode=shiftGroupCode,
            stepNumber=stepNumber,
            supervisorId=supervisorId,
            supervisorNameFirst=supervisorNameFirst,
            supervisorNameLast=supervisorNameLast,
            supervisorNameSuffix=supervisorNameSuffix,
            supervisorNotInList=supervisorNotInList,
            systemId=systemId,
            unionNational=unionNational,
            usePayScales=usePayScales,
            weeklyPayRate=weeklyPayRate,
            notes=notes,
            homeCompanyId=homeCompanyId,
            integrationEffectiveDate=integrationEffectiveDate,
            projectCode=projectCode,
            numberOfPayments=numberOfPayments,
            weeklyHours=weeklyHours,
            isViewableByEmployee=isViewableByEmployee,
            createdByUserId=createdByUserId,
            jobTitle=jobTitle,
            _configuration=_configuration,
            **kwargs,
        )
