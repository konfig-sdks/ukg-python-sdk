# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class ScheduleModelStateDto(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class operationType(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'operationType':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class empName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'empName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class skdDate(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skdDate':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class skdStartTime(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skdStartTime':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class skdEndTime(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skdEndTime':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class skdTime(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'skdTime':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class wbtName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'wbtName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class tcodeName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'tcodeName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class jobName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'jobName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class htypeName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'htypeName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class actName(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'actName':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            
            
            class noDetails(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['StateDto']:
                        return StateDto
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['StateDto'], typing.List['StateDto']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'noDetails':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'StateDto':
                    return super().__getitem__(i)
            __annotations__ = {
                "operationType": operationType,
                "empName": empName,
                "skdDate": skdDate,
                "skdStartTime": skdStartTime,
                "skdEndTime": skdEndTime,
                "skdTime": skdTime,
                "wbtName": wbtName,
                "tcodeName": tcodeName,
                "jobName": jobName,
                "htypeName": htypeName,
                "actName": actName,
                "noDetails": noDetails,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["operationType"]) -> MetaOapg.properties.operationType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["empName"]) -> MetaOapg.properties.empName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skdDate"]) -> MetaOapg.properties.skdDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skdStartTime"]) -> MetaOapg.properties.skdStartTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skdEndTime"]) -> MetaOapg.properties.skdEndTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["skdTime"]) -> MetaOapg.properties.skdTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["wbtName"]) -> MetaOapg.properties.wbtName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tcodeName"]) -> MetaOapg.properties.tcodeName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["jobName"]) -> MetaOapg.properties.jobName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["htypeName"]) -> MetaOapg.properties.htypeName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["actName"]) -> MetaOapg.properties.actName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["noDetails"]) -> MetaOapg.properties.noDetails: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["operationType", "empName", "skdDate", "skdStartTime", "skdEndTime", "skdTime", "wbtName", "tcodeName", "jobName", "htypeName", "actName", "noDetails", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["operationType"]) -> typing.Union[MetaOapg.properties.operationType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["empName"]) -> typing.Union[MetaOapg.properties.empName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skdDate"]) -> typing.Union[MetaOapg.properties.skdDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skdStartTime"]) -> typing.Union[MetaOapg.properties.skdStartTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skdEndTime"]) -> typing.Union[MetaOapg.properties.skdEndTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["skdTime"]) -> typing.Union[MetaOapg.properties.skdTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["wbtName"]) -> typing.Union[MetaOapg.properties.wbtName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tcodeName"]) -> typing.Union[MetaOapg.properties.tcodeName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["jobName"]) -> typing.Union[MetaOapg.properties.jobName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["htypeName"]) -> typing.Union[MetaOapg.properties.htypeName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["actName"]) -> typing.Union[MetaOapg.properties.actName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["noDetails"]) -> typing.Union[MetaOapg.properties.noDetails, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["operationType", "empName", "skdDate", "skdStartTime", "skdEndTime", "skdTime", "wbtName", "tcodeName", "jobName", "htypeName", "actName", "noDetails", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        operationType: typing.Union[MetaOapg.properties.operationType, list, tuple, schemas.Unset] = schemas.unset,
        empName: typing.Union[MetaOapg.properties.empName, list, tuple, schemas.Unset] = schemas.unset,
        skdDate: typing.Union[MetaOapg.properties.skdDate, list, tuple, schemas.Unset] = schemas.unset,
        skdStartTime: typing.Union[MetaOapg.properties.skdStartTime, list, tuple, schemas.Unset] = schemas.unset,
        skdEndTime: typing.Union[MetaOapg.properties.skdEndTime, list, tuple, schemas.Unset] = schemas.unset,
        skdTime: typing.Union[MetaOapg.properties.skdTime, list, tuple, schemas.Unset] = schemas.unset,
        wbtName: typing.Union[MetaOapg.properties.wbtName, list, tuple, schemas.Unset] = schemas.unset,
        tcodeName: typing.Union[MetaOapg.properties.tcodeName, list, tuple, schemas.Unset] = schemas.unset,
        jobName: typing.Union[MetaOapg.properties.jobName, list, tuple, schemas.Unset] = schemas.unset,
        htypeName: typing.Union[MetaOapg.properties.htypeName, list, tuple, schemas.Unset] = schemas.unset,
        actName: typing.Union[MetaOapg.properties.actName, list, tuple, schemas.Unset] = schemas.unset,
        noDetails: typing.Union[MetaOapg.properties.noDetails, list, tuple, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ScheduleModelStateDto':
        return super().__new__(
            cls,
            *args,
            operationType=operationType,
            empName=empName,
            skdDate=skdDate,
            skdStartTime=skdStartTime,
            skdEndTime=skdEndTime,
            skdTime=skdTime,
            wbtName=wbtName,
            tcodeName=tcodeName,
            jobName=jobName,
            htypeName=htypeName,
            actName=actName,
            noDetails=noDetails,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.state_dto import StateDto
