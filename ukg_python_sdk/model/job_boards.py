# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class JobBoards(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            id = schemas.AnyTypeSchema
            is_published_internal = schemas.AnyTypeSchema
            is_published_external = schemas.AnyTypeSchema
            recruiting_apply_url = schemas.AnyTypeSchema
            __annotations__ = {
                "id": id,
                "is_published_internal": is_published_internal,
                "is_published_external": is_published_external,
                "recruiting_apply_url": recruiting_apply_url,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_published_internal"]) -> MetaOapg.properties.is_published_internal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_published_external"]) -> MetaOapg.properties.is_published_external: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["recruiting_apply_url"]) -> MetaOapg.properties.recruiting_apply_url: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["id", "is_published_internal", "is_published_external", "recruiting_apply_url", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_published_internal"]) -> typing.Union[MetaOapg.properties.is_published_internal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_published_external"]) -> typing.Union[MetaOapg.properties.is_published_external, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["recruiting_apply_url"]) -> typing.Union[MetaOapg.properties.recruiting_apply_url, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["id", "is_published_internal", "is_published_external", "recruiting_apply_url", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        id: typing.Union[MetaOapg.properties.id, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        is_published_internal: typing.Union[MetaOapg.properties.is_published_internal, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        is_published_external: typing.Union[MetaOapg.properties.is_published_external, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        recruiting_apply_url: typing.Union[MetaOapg.properties.recruiting_apply_url, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'JobBoards':
        return super().__new__(
            cls,
            *args,
            id=id,
            is_published_internal=is_published_internal,
            is_published_external=is_published_external,
            recruiting_apply_url=recruiting_apply_url,
            _configuration=_configuration,
            **kwargs,
        )
