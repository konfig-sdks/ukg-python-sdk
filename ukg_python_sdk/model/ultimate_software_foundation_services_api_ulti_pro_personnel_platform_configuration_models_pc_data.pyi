# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            
            
            class fieldRows(
                schemas.ListSchema
            ):
            
            
                class MetaOapg:
                    
                    @staticmethod
                    def items() -> typing.Type['UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData']:
                        return UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData
            
                def __new__(
                    cls,
                    arg: typing.Union[typing.Tuple['UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData'], typing.List['UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData']],
                    _configuration: typing.Optional[schemas.Configuration] = None,
                ) -> 'fieldRows':
                    return super().__new__(
                        cls,
                        arg,
                        _configuration=_configuration,
                    )
            
                def __getitem__(self, i: int) -> 'UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData':
                    return super().__getitem__(i)
            className = schemas.StrSchema
            keyName = schemas.StrSchema
            keyValue = schemas.StrSchema
            __annotations__ = {
                "fieldRows": fieldRows,
                "className": className,
                "keyName": keyName,
                "keyValue": keyValue,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["fieldRows"]) -> MetaOapg.properties.fieldRows: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["className"]) -> MetaOapg.properties.className: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["keyName"]) -> MetaOapg.properties.keyName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["keyValue"]) -> MetaOapg.properties.keyValue: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["fieldRows", "className", "keyName", "keyValue", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["fieldRows"]) -> typing.Union[MetaOapg.properties.fieldRows, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["className"]) -> typing.Union[MetaOapg.properties.className, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["keyName"]) -> typing.Union[MetaOapg.properties.keyName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["keyValue"]) -> typing.Union[MetaOapg.properties.keyValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["fieldRows", "className", "keyName", "keyValue", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        fieldRows: typing.Union[MetaOapg.properties.fieldRows, list, tuple, schemas.Unset] = schemas.unset,
        className: typing.Union[MetaOapg.properties.className, str, schemas.Unset] = schemas.unset,
        keyName: typing.Union[MetaOapg.properties.keyName, str, schemas.Unset] = schemas.unset,
        keyValue: typing.Union[MetaOapg.properties.keyValue, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData':
        return super().__new__(
            cls,
            *args,
            fieldRows=fieldRows,
            className=className,
            keyName=keyName,
            keyValue=keyValue,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.ultimate_software_foundation_services_api_ulti_pro_personnel_platform_configuration_models_field_data import UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsFieldData
