# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class EmployeeExtendedElements(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            personID = schemas.StrSchema
            employeeID = schemas.StrSchema
            companyID = schemas.StrSchema
            communityBroadcastSMSCode = schemas.StrSchema
            consentElectronicW2 = schemas.BoolSchema
            consentElectronicW2PR = schemas.BoolSchema
            dateDeceased = schemas.DateTimeSchema
            dateOfI9Expiration = schemas.DateTimeSchema
            dateTimeChanged = schemas.DateTimeSchema
            dateTimeCreated = schemas.DateTimeSchema
            i9AlienNumber = schemas.StrSchema
            i9DocA = schemas.StrSchema
            i9DocB = schemas.StrSchema
            i9DocC = schemas.StrSchema
            i9Verified = schemas.BoolSchema
            i9VisaType = schemas.StrSchema
            i9WorkAuth = schemas.StrSchema
            isMultiPayGroup = schemas.BoolSchema
            militaryBranchServed = schemas.StrSchema
            militaryEra = schemas.StrSchema
            militaryIsDisabledVet = schemas.StrSchema
            militaryIsOthEligVet = schemas.StrSchema
            militaryIsOthEligVetBasis = schemas.StrSchema
            militaryIsActiveWartimeVet = schemas.StrSchema
            w2IsDeceased = schemas.BoolSchema
            militarySeparationDate = schemas.DateTimeSchema
            smsApprovals = schemas.BoolSchema
            smsPayNotification = schemas.BoolSchema
            chkCashingInstCode = schemas.StrSchema
            i9VisaExpirationDate = schemas.DateTimeSchema
            militaryIsMedalVet = schemas.StrSchema
            militaryService = schemas.StrSchema
            __annotations__ = {
                "personID": personID,
                "employeeID": employeeID,
                "companyID": companyID,
                "communityBroadcastSMSCode": communityBroadcastSMSCode,
                "consentElectronicW2": consentElectronicW2,
                "consentElectronicW2PR": consentElectronicW2PR,
                "dateDeceased": dateDeceased,
                "dateOfI9Expiration": dateOfI9Expiration,
                "dateTimeChanged": dateTimeChanged,
                "dateTimeCreated": dateTimeCreated,
                "i9AlienNumber": i9AlienNumber,
                "i9DocA": i9DocA,
                "i9DocB": i9DocB,
                "i9DocC": i9DocC,
                "i9Verified": i9Verified,
                "i9VisaType": i9VisaType,
                "i9WorkAuth": i9WorkAuth,
                "isMultiPayGroup": isMultiPayGroup,
                "militaryBranchServed": militaryBranchServed,
                "militaryEra": militaryEra,
                "militaryIsDisabledVet": militaryIsDisabledVet,
                "militaryIsOthEligVet": militaryIsOthEligVet,
                "militaryIsOthEligVetBasis": militaryIsOthEligVetBasis,
                "militaryIsActiveWartimeVet": militaryIsActiveWartimeVet,
                "w2IsDeceased": w2IsDeceased,
                "militarySeparationDate": militarySeparationDate,
                "smsApprovals": smsApprovals,
                "smsPayNotification": smsPayNotification,
                "chkCashingInstCode": chkCashingInstCode,
                "i9VisaExpirationDate": i9VisaExpirationDate,
                "militaryIsMedalVet": militaryIsMedalVet,
                "militaryService": militaryService,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["personID"]) -> MetaOapg.properties.personID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeID"]) -> MetaOapg.properties.employeeID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyID"]) -> MetaOapg.properties.companyID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["communityBroadcastSMSCode"]) -> MetaOapg.properties.communityBroadcastSMSCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["consentElectronicW2"]) -> MetaOapg.properties.consentElectronicW2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["consentElectronicW2PR"]) -> MetaOapg.properties.consentElectronicW2PR: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateDeceased"]) -> MetaOapg.properties.dateDeceased: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfI9Expiration"]) -> MetaOapg.properties.dateOfI9Expiration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateTimeChanged"]) -> MetaOapg.properties.dateTimeChanged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateTimeCreated"]) -> MetaOapg.properties.dateTimeCreated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9AlienNumber"]) -> MetaOapg.properties.i9AlienNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocA"]) -> MetaOapg.properties.i9DocA: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocB"]) -> MetaOapg.properties.i9DocB: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocC"]) -> MetaOapg.properties.i9DocC: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9Verified"]) -> MetaOapg.properties.i9Verified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9VisaType"]) -> MetaOapg.properties.i9VisaType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9WorkAuth"]) -> MetaOapg.properties.i9WorkAuth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isMultiPayGroup"]) -> MetaOapg.properties.isMultiPayGroup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryBranchServed"]) -> MetaOapg.properties.militaryBranchServed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryEra"]) -> MetaOapg.properties.militaryEra: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsDisabledVet"]) -> MetaOapg.properties.militaryIsDisabledVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsOthEligVet"]) -> MetaOapg.properties.militaryIsOthEligVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsOthEligVetBasis"]) -> MetaOapg.properties.militaryIsOthEligVetBasis: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsActiveWartimeVet"]) -> MetaOapg.properties.militaryIsActiveWartimeVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["w2IsDeceased"]) -> MetaOapg.properties.w2IsDeceased: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militarySeparationDate"]) -> MetaOapg.properties.militarySeparationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["smsApprovals"]) -> MetaOapg.properties.smsApprovals: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["smsPayNotification"]) -> MetaOapg.properties.smsPayNotification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chkCashingInstCode"]) -> MetaOapg.properties.chkCashingInstCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9VisaExpirationDate"]) -> MetaOapg.properties.i9VisaExpirationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsMedalVet"]) -> MetaOapg.properties.militaryIsMedalVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryService"]) -> MetaOapg.properties.militaryService: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["personID", "employeeID", "companyID", "communityBroadcastSMSCode", "consentElectronicW2", "consentElectronicW2PR", "dateDeceased", "dateOfI9Expiration", "dateTimeChanged", "dateTimeCreated", "i9AlienNumber", "i9DocA", "i9DocB", "i9DocC", "i9Verified", "i9VisaType", "i9WorkAuth", "isMultiPayGroup", "militaryBranchServed", "militaryEra", "militaryIsDisabledVet", "militaryIsOthEligVet", "militaryIsOthEligVetBasis", "militaryIsActiveWartimeVet", "w2IsDeceased", "militarySeparationDate", "smsApprovals", "smsPayNotification", "chkCashingInstCode", "i9VisaExpirationDate", "militaryIsMedalVet", "militaryService", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["personID"]) -> typing.Union[MetaOapg.properties.personID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeID"]) -> typing.Union[MetaOapg.properties.employeeID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyID"]) -> typing.Union[MetaOapg.properties.companyID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["communityBroadcastSMSCode"]) -> typing.Union[MetaOapg.properties.communityBroadcastSMSCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["consentElectronicW2"]) -> typing.Union[MetaOapg.properties.consentElectronicW2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["consentElectronicW2PR"]) -> typing.Union[MetaOapg.properties.consentElectronicW2PR, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateDeceased"]) -> typing.Union[MetaOapg.properties.dateDeceased, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfI9Expiration"]) -> typing.Union[MetaOapg.properties.dateOfI9Expiration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateTimeChanged"]) -> typing.Union[MetaOapg.properties.dateTimeChanged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateTimeCreated"]) -> typing.Union[MetaOapg.properties.dateTimeCreated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9AlienNumber"]) -> typing.Union[MetaOapg.properties.i9AlienNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocA"]) -> typing.Union[MetaOapg.properties.i9DocA, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocB"]) -> typing.Union[MetaOapg.properties.i9DocB, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocC"]) -> typing.Union[MetaOapg.properties.i9DocC, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9Verified"]) -> typing.Union[MetaOapg.properties.i9Verified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9VisaType"]) -> typing.Union[MetaOapg.properties.i9VisaType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9WorkAuth"]) -> typing.Union[MetaOapg.properties.i9WorkAuth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isMultiPayGroup"]) -> typing.Union[MetaOapg.properties.isMultiPayGroup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryBranchServed"]) -> typing.Union[MetaOapg.properties.militaryBranchServed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryEra"]) -> typing.Union[MetaOapg.properties.militaryEra, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsDisabledVet"]) -> typing.Union[MetaOapg.properties.militaryIsDisabledVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsOthEligVet"]) -> typing.Union[MetaOapg.properties.militaryIsOthEligVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsOthEligVetBasis"]) -> typing.Union[MetaOapg.properties.militaryIsOthEligVetBasis, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsActiveWartimeVet"]) -> typing.Union[MetaOapg.properties.militaryIsActiveWartimeVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["w2IsDeceased"]) -> typing.Union[MetaOapg.properties.w2IsDeceased, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militarySeparationDate"]) -> typing.Union[MetaOapg.properties.militarySeparationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["smsApprovals"]) -> typing.Union[MetaOapg.properties.smsApprovals, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["smsPayNotification"]) -> typing.Union[MetaOapg.properties.smsPayNotification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chkCashingInstCode"]) -> typing.Union[MetaOapg.properties.chkCashingInstCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9VisaExpirationDate"]) -> typing.Union[MetaOapg.properties.i9VisaExpirationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsMedalVet"]) -> typing.Union[MetaOapg.properties.militaryIsMedalVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryService"]) -> typing.Union[MetaOapg.properties.militaryService, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["personID", "employeeID", "companyID", "communityBroadcastSMSCode", "consentElectronicW2", "consentElectronicW2PR", "dateDeceased", "dateOfI9Expiration", "dateTimeChanged", "dateTimeCreated", "i9AlienNumber", "i9DocA", "i9DocB", "i9DocC", "i9Verified", "i9VisaType", "i9WorkAuth", "isMultiPayGroup", "militaryBranchServed", "militaryEra", "militaryIsDisabledVet", "militaryIsOthEligVet", "militaryIsOthEligVetBasis", "militaryIsActiveWartimeVet", "w2IsDeceased", "militarySeparationDate", "smsApprovals", "smsPayNotification", "chkCashingInstCode", "i9VisaExpirationDate", "militaryIsMedalVet", "militaryService", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        personID: typing.Union[MetaOapg.properties.personID, str, schemas.Unset] = schemas.unset,
        employeeID: typing.Union[MetaOapg.properties.employeeID, str, schemas.Unset] = schemas.unset,
        companyID: typing.Union[MetaOapg.properties.companyID, str, schemas.Unset] = schemas.unset,
        communityBroadcastSMSCode: typing.Union[MetaOapg.properties.communityBroadcastSMSCode, str, schemas.Unset] = schemas.unset,
        consentElectronicW2: typing.Union[MetaOapg.properties.consentElectronicW2, bool, schemas.Unset] = schemas.unset,
        consentElectronicW2PR: typing.Union[MetaOapg.properties.consentElectronicW2PR, bool, schemas.Unset] = schemas.unset,
        dateDeceased: typing.Union[MetaOapg.properties.dateDeceased, str, datetime, schemas.Unset] = schemas.unset,
        dateOfI9Expiration: typing.Union[MetaOapg.properties.dateOfI9Expiration, str, datetime, schemas.Unset] = schemas.unset,
        dateTimeChanged: typing.Union[MetaOapg.properties.dateTimeChanged, str, datetime, schemas.Unset] = schemas.unset,
        dateTimeCreated: typing.Union[MetaOapg.properties.dateTimeCreated, str, datetime, schemas.Unset] = schemas.unset,
        i9AlienNumber: typing.Union[MetaOapg.properties.i9AlienNumber, str, schemas.Unset] = schemas.unset,
        i9DocA: typing.Union[MetaOapg.properties.i9DocA, str, schemas.Unset] = schemas.unset,
        i9DocB: typing.Union[MetaOapg.properties.i9DocB, str, schemas.Unset] = schemas.unset,
        i9DocC: typing.Union[MetaOapg.properties.i9DocC, str, schemas.Unset] = schemas.unset,
        i9Verified: typing.Union[MetaOapg.properties.i9Verified, bool, schemas.Unset] = schemas.unset,
        i9VisaType: typing.Union[MetaOapg.properties.i9VisaType, str, schemas.Unset] = schemas.unset,
        i9WorkAuth: typing.Union[MetaOapg.properties.i9WorkAuth, str, schemas.Unset] = schemas.unset,
        isMultiPayGroup: typing.Union[MetaOapg.properties.isMultiPayGroup, bool, schemas.Unset] = schemas.unset,
        militaryBranchServed: typing.Union[MetaOapg.properties.militaryBranchServed, str, schemas.Unset] = schemas.unset,
        militaryEra: typing.Union[MetaOapg.properties.militaryEra, str, schemas.Unset] = schemas.unset,
        militaryIsDisabledVet: typing.Union[MetaOapg.properties.militaryIsDisabledVet, str, schemas.Unset] = schemas.unset,
        militaryIsOthEligVet: typing.Union[MetaOapg.properties.militaryIsOthEligVet, str, schemas.Unset] = schemas.unset,
        militaryIsOthEligVetBasis: typing.Union[MetaOapg.properties.militaryIsOthEligVetBasis, str, schemas.Unset] = schemas.unset,
        militaryIsActiveWartimeVet: typing.Union[MetaOapg.properties.militaryIsActiveWartimeVet, str, schemas.Unset] = schemas.unset,
        w2IsDeceased: typing.Union[MetaOapg.properties.w2IsDeceased, bool, schemas.Unset] = schemas.unset,
        militarySeparationDate: typing.Union[MetaOapg.properties.militarySeparationDate, str, datetime, schemas.Unset] = schemas.unset,
        smsApprovals: typing.Union[MetaOapg.properties.smsApprovals, bool, schemas.Unset] = schemas.unset,
        smsPayNotification: typing.Union[MetaOapg.properties.smsPayNotification, bool, schemas.Unset] = schemas.unset,
        chkCashingInstCode: typing.Union[MetaOapg.properties.chkCashingInstCode, str, schemas.Unset] = schemas.unset,
        i9VisaExpirationDate: typing.Union[MetaOapg.properties.i9VisaExpirationDate, str, datetime, schemas.Unset] = schemas.unset,
        militaryIsMedalVet: typing.Union[MetaOapg.properties.militaryIsMedalVet, str, schemas.Unset] = schemas.unset,
        militaryService: typing.Union[MetaOapg.properties.militaryService, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeeExtendedElements':
        return super().__new__(
            cls,
            *args,
            personID=personID,
            employeeID=employeeID,
            companyID=companyID,
            communityBroadcastSMSCode=communityBroadcastSMSCode,
            consentElectronicW2=consentElectronicW2,
            consentElectronicW2PR=consentElectronicW2PR,
            dateDeceased=dateDeceased,
            dateOfI9Expiration=dateOfI9Expiration,
            dateTimeChanged=dateTimeChanged,
            dateTimeCreated=dateTimeCreated,
            i9AlienNumber=i9AlienNumber,
            i9DocA=i9DocA,
            i9DocB=i9DocB,
            i9DocC=i9DocC,
            i9Verified=i9Verified,
            i9VisaType=i9VisaType,
            i9WorkAuth=i9WorkAuth,
            isMultiPayGroup=isMultiPayGroup,
            militaryBranchServed=militaryBranchServed,
            militaryEra=militaryEra,
            militaryIsDisabledVet=militaryIsDisabledVet,
            militaryIsOthEligVet=militaryIsOthEligVet,
            militaryIsOthEligVetBasis=militaryIsOthEligVetBasis,
            militaryIsActiveWartimeVet=militaryIsActiveWartimeVet,
            w2IsDeceased=w2IsDeceased,
            militarySeparationDate=militarySeparationDate,
            smsApprovals=smsApprovals,
            smsPayNotification=smsPayNotification,
            chkCashingInstCode=chkCashingInstCode,
            i9VisaExpirationDate=i9VisaExpirationDate,
            militaryIsMedalVet=militaryIsMedalVet,
            militaryService=militaryService,
            _configuration=_configuration,
            **kwargs,
        )
