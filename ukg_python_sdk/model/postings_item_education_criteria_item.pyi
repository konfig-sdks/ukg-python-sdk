# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class PostingsItemEducationCriteriaItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            is_required = schemas.BoolSchema
            allow_related = schemas.BoolSchema
        
            @staticmethod
            def degree() -> typing.Type['PostingsItemEducationCriteriaItemDegree']:
                return PostingsItemEducationCriteriaItemDegree
        
            @staticmethod
            def major() -> typing.Type['PostingsItemEducationCriteriaItemMajor']:
                return PostingsItemEducationCriteriaItemMajor
            __annotations__ = {
                "is_required": is_required,
                "allow_related": allow_related,
                "degree": degree,
                "major": major,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is_required"]) -> MetaOapg.properties.is_required: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["allow_related"]) -> MetaOapg.properties.allow_related: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["degree"]) -> 'PostingsItemEducationCriteriaItemDegree': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["major"]) -> 'PostingsItemEducationCriteriaItemMajor': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["is_required", "allow_related", "degree", "major", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is_required"]) -> typing.Union[MetaOapg.properties.is_required, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["allow_related"]) -> typing.Union[MetaOapg.properties.allow_related, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["degree"]) -> typing.Union['PostingsItemEducationCriteriaItemDegree', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["major"]) -> typing.Union['PostingsItemEducationCriteriaItemMajor', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["is_required", "allow_related", "degree", "major", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        is_required: typing.Union[MetaOapg.properties.is_required, bool, schemas.Unset] = schemas.unset,
        allow_related: typing.Union[MetaOapg.properties.allow_related, bool, schemas.Unset] = schemas.unset,
        degree: typing.Union['PostingsItemEducationCriteriaItemDegree', schemas.Unset] = schemas.unset,
        major: typing.Union['PostingsItemEducationCriteriaItemMajor', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PostingsItemEducationCriteriaItem':
        return super().__new__(
            cls,
            *args,
            is_required=is_required,
            allow_related=allow_related,
            degree=degree,
            major=major,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.postings_item_education_criteria_item_degree import PostingsItemEducationCriteriaItemDegree
from ukg_python_sdk.model.postings_item_education_criteria_item_major import PostingsItemEducationCriteriaItemMajor
