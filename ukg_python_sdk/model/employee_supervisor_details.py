# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class EmployeeSupervisorDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            employeeID = schemas.StrSchema
            companyID = schemas.StrSchema
            employeeNumber = schemas.StrSchema
            supervisorEmployeeID = schemas.StrSchema
            supervisorFirstName = schemas.StrSchema
            supervisorLastName = schemas.StrSchema
            supervisorEmployeeNumber = schemas.StrSchema
            supervisorCompanyID = schemas.StrSchema
            supervisorCompanyCode = schemas.StrSchema
            supervisorStatusCode = schemas.StrSchema
            supervisorJobCode = schemas.StrSchema
            supervisorPositionCode = schemas.StrSchema
            supervisorEmail = schemas.StrSchema
            supervisorWorkPhone = schemas.StrSchema
            supervisorPersonId = schemas.StrSchema
            __annotations__ = {
                "employeeID": employeeID,
                "companyID": companyID,
                "employeeNumber": employeeNumber,
                "supervisorEmployeeID": supervisorEmployeeID,
                "supervisorFirstName": supervisorFirstName,
                "supervisorLastName": supervisorLastName,
                "supervisorEmployeeNumber": supervisorEmployeeNumber,
                "supervisorCompanyID": supervisorCompanyID,
                "supervisorCompanyCode": supervisorCompanyCode,
                "supervisorStatusCode": supervisorStatusCode,
                "supervisorJobCode": supervisorJobCode,
                "supervisorPositionCode": supervisorPositionCode,
                "supervisorEmail": supervisorEmail,
                "supervisorWorkPhone": supervisorWorkPhone,
                "supervisorPersonId": supervisorPersonId,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeID"]) -> MetaOapg.properties.employeeID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyID"]) -> MetaOapg.properties.companyID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeNumber"]) -> MetaOapg.properties.employeeNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorEmployeeID"]) -> MetaOapg.properties.supervisorEmployeeID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorFirstName"]) -> MetaOapg.properties.supervisorFirstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorLastName"]) -> MetaOapg.properties.supervisorLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorEmployeeNumber"]) -> MetaOapg.properties.supervisorEmployeeNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorCompanyID"]) -> MetaOapg.properties.supervisorCompanyID: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorCompanyCode"]) -> MetaOapg.properties.supervisorCompanyCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorStatusCode"]) -> MetaOapg.properties.supervisorStatusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorJobCode"]) -> MetaOapg.properties.supervisorJobCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorPositionCode"]) -> MetaOapg.properties.supervisorPositionCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorEmail"]) -> MetaOapg.properties.supervisorEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorWorkPhone"]) -> MetaOapg.properties.supervisorWorkPhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supervisorPersonId"]) -> MetaOapg.properties.supervisorPersonId: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["employeeID", "companyID", "employeeNumber", "supervisorEmployeeID", "supervisorFirstName", "supervisorLastName", "supervisorEmployeeNumber", "supervisorCompanyID", "supervisorCompanyCode", "supervisorStatusCode", "supervisorJobCode", "supervisorPositionCode", "supervisorEmail", "supervisorWorkPhone", "supervisorPersonId", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeID"]) -> typing.Union[MetaOapg.properties.employeeID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyID"]) -> typing.Union[MetaOapg.properties.companyID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeNumber"]) -> typing.Union[MetaOapg.properties.employeeNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorEmployeeID"]) -> typing.Union[MetaOapg.properties.supervisorEmployeeID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorFirstName"]) -> typing.Union[MetaOapg.properties.supervisorFirstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorLastName"]) -> typing.Union[MetaOapg.properties.supervisorLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorEmployeeNumber"]) -> typing.Union[MetaOapg.properties.supervisorEmployeeNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorCompanyID"]) -> typing.Union[MetaOapg.properties.supervisorCompanyID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorCompanyCode"]) -> typing.Union[MetaOapg.properties.supervisorCompanyCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorStatusCode"]) -> typing.Union[MetaOapg.properties.supervisorStatusCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorJobCode"]) -> typing.Union[MetaOapg.properties.supervisorJobCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorPositionCode"]) -> typing.Union[MetaOapg.properties.supervisorPositionCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorEmail"]) -> typing.Union[MetaOapg.properties.supervisorEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorWorkPhone"]) -> typing.Union[MetaOapg.properties.supervisorWorkPhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supervisorPersonId"]) -> typing.Union[MetaOapg.properties.supervisorPersonId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["employeeID", "companyID", "employeeNumber", "supervisorEmployeeID", "supervisorFirstName", "supervisorLastName", "supervisorEmployeeNumber", "supervisorCompanyID", "supervisorCompanyCode", "supervisorStatusCode", "supervisorJobCode", "supervisorPositionCode", "supervisorEmail", "supervisorWorkPhone", "supervisorPersonId", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        employeeID: typing.Union[MetaOapg.properties.employeeID, str, schemas.Unset] = schemas.unset,
        companyID: typing.Union[MetaOapg.properties.companyID, str, schemas.Unset] = schemas.unset,
        employeeNumber: typing.Union[MetaOapg.properties.employeeNumber, str, schemas.Unset] = schemas.unset,
        supervisorEmployeeID: typing.Union[MetaOapg.properties.supervisorEmployeeID, str, schemas.Unset] = schemas.unset,
        supervisorFirstName: typing.Union[MetaOapg.properties.supervisorFirstName, str, schemas.Unset] = schemas.unset,
        supervisorLastName: typing.Union[MetaOapg.properties.supervisorLastName, str, schemas.Unset] = schemas.unset,
        supervisorEmployeeNumber: typing.Union[MetaOapg.properties.supervisorEmployeeNumber, str, schemas.Unset] = schemas.unset,
        supervisorCompanyID: typing.Union[MetaOapg.properties.supervisorCompanyID, str, schemas.Unset] = schemas.unset,
        supervisorCompanyCode: typing.Union[MetaOapg.properties.supervisorCompanyCode, str, schemas.Unset] = schemas.unset,
        supervisorStatusCode: typing.Union[MetaOapg.properties.supervisorStatusCode, str, schemas.Unset] = schemas.unset,
        supervisorJobCode: typing.Union[MetaOapg.properties.supervisorJobCode, str, schemas.Unset] = schemas.unset,
        supervisorPositionCode: typing.Union[MetaOapg.properties.supervisorPositionCode, str, schemas.Unset] = schemas.unset,
        supervisorEmail: typing.Union[MetaOapg.properties.supervisorEmail, str, schemas.Unset] = schemas.unset,
        supervisorWorkPhone: typing.Union[MetaOapg.properties.supervisorWorkPhone, str, schemas.Unset] = schemas.unset,
        supervisorPersonId: typing.Union[MetaOapg.properties.supervisorPersonId, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmployeeSupervisorDetails':
        return super().__new__(
            cls,
            *args,
            employeeID=employeeID,
            companyID=companyID,
            employeeNumber=employeeNumber,
            supervisorEmployeeID=supervisorEmployeeID,
            supervisorFirstName=supervisorFirstName,
            supervisorLastName=supervisorLastName,
            supervisorEmployeeNumber=supervisorEmployeeNumber,
            supervisorCompanyID=supervisorCompanyID,
            supervisorCompanyCode=supervisorCompanyCode,
            supervisorStatusCode=supervisorStatusCode,
            supervisorJobCode=supervisorJobCode,
            supervisorPositionCode=supervisorPositionCode,
            supervisorEmail=supervisorEmail,
            supervisorWorkPhone=supervisorWorkPhone,
            supervisorPersonId=supervisorPersonId,
            _configuration=_configuration,
            **kwargs,
        )
