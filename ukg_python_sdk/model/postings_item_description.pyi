# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class PostingsItemDescription(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def brief() -> typing.Type['Translations']:
                return Translations
        
            @staticmethod
            def detailed() -> typing.Type['Translations']:
                return Translations
        
            @staticmethod
            def full_html() -> typing.Type['Translations']:
                return Translations
            eoe_text = schemas.StrSchema
            pay_transparency_text = schemas.StrSchema
            __annotations__ = {
                "brief": brief,
                "detailed": detailed,
                "full_html": full_html,
                "eoe_text": eoe_text,
                "pay_transparency_text": pay_transparency_text,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["brief"]) -> 'Translations': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["detailed"]) -> 'Translations': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["full_html"]) -> 'Translations': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["eoe_text"]) -> MetaOapg.properties.eoe_text: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["pay_transparency_text"]) -> MetaOapg.properties.pay_transparency_text: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["brief", "detailed", "full_html", "eoe_text", "pay_transparency_text", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["brief"]) -> typing.Union['Translations', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["detailed"]) -> typing.Union['Translations', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["full_html"]) -> typing.Union['Translations', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["eoe_text"]) -> typing.Union[MetaOapg.properties.eoe_text, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["pay_transparency_text"]) -> typing.Union[MetaOapg.properties.pay_transparency_text, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["brief", "detailed", "full_html", "eoe_text", "pay_transparency_text", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        brief: typing.Union['Translations', schemas.Unset] = schemas.unset,
        detailed: typing.Union['Translations', schemas.Unset] = schemas.unset,
        full_html: typing.Union['Translations', schemas.Unset] = schemas.unset,
        eoe_text: typing.Union[MetaOapg.properties.eoe_text, str, schemas.Unset] = schemas.unset,
        pay_transparency_text: typing.Union[MetaOapg.properties.pay_transparency_text, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PostingsItemDescription':
        return super().__new__(
            cls,
            *args,
            brief=brief,
            detailed=detailed,
            full_html=full_html,
            eoe_text=eoe_text,
            pay_transparency_text=pay_transparency_text,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.translations import Translations
