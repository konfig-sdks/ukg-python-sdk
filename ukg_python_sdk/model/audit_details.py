# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class AuditDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            audDateTime = schemas.DateTimeSchema
            audKey1Label = schemas.StrSchema
            audKey2Label = schemas.StrSchema
            audKey3Label = schemas.StrSchema
            audKey1Value = schemas.StrSchema
            audKey2Value = schemas.StrSchema
            audKey3Value = schemas.StrSchema
            audTableName = schemas.StrSchema
            audFieldName = schemas.StrSchema
            audOldValue = schemas.StrSchema
            audNewValue = schemas.StrSchema
            audAction = schemas.StrSchema
            audSystemID = schemas.StrSchema
            __annotations__ = {
                "audDateTime": audDateTime,
                "audKey1Label": audKey1Label,
                "audKey2Label": audKey2Label,
                "audKey3Label": audKey3Label,
                "audKey1Value": audKey1Value,
                "audKey2Value": audKey2Value,
                "audKey3Value": audKey3Value,
                "audTableName": audTableName,
                "audFieldName": audFieldName,
                "audOldValue": audOldValue,
                "audNewValue": audNewValue,
                "audAction": audAction,
                "audSystemID": audSystemID,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audDateTime"]) -> MetaOapg.properties.audDateTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey1Label"]) -> MetaOapg.properties.audKey1Label: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey2Label"]) -> MetaOapg.properties.audKey2Label: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey3Label"]) -> MetaOapg.properties.audKey3Label: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey1Value"]) -> MetaOapg.properties.audKey1Value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey2Value"]) -> MetaOapg.properties.audKey2Value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audKey3Value"]) -> MetaOapg.properties.audKey3Value: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audTableName"]) -> MetaOapg.properties.audTableName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audFieldName"]) -> MetaOapg.properties.audFieldName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audOldValue"]) -> MetaOapg.properties.audOldValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audNewValue"]) -> MetaOapg.properties.audNewValue: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audAction"]) -> MetaOapg.properties.audAction: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["audSystemID"]) -> MetaOapg.properties.audSystemID: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["audDateTime", "audKey1Label", "audKey2Label", "audKey3Label", "audKey1Value", "audKey2Value", "audKey3Value", "audTableName", "audFieldName", "audOldValue", "audNewValue", "audAction", "audSystemID", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audDateTime"]) -> typing.Union[MetaOapg.properties.audDateTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey1Label"]) -> typing.Union[MetaOapg.properties.audKey1Label, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey2Label"]) -> typing.Union[MetaOapg.properties.audKey2Label, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey3Label"]) -> typing.Union[MetaOapg.properties.audKey3Label, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey1Value"]) -> typing.Union[MetaOapg.properties.audKey1Value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey2Value"]) -> typing.Union[MetaOapg.properties.audKey2Value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audKey3Value"]) -> typing.Union[MetaOapg.properties.audKey3Value, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audTableName"]) -> typing.Union[MetaOapg.properties.audTableName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audFieldName"]) -> typing.Union[MetaOapg.properties.audFieldName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audOldValue"]) -> typing.Union[MetaOapg.properties.audOldValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audNewValue"]) -> typing.Union[MetaOapg.properties.audNewValue, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audAction"]) -> typing.Union[MetaOapg.properties.audAction, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["audSystemID"]) -> typing.Union[MetaOapg.properties.audSystemID, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["audDateTime", "audKey1Label", "audKey2Label", "audKey3Label", "audKey1Value", "audKey2Value", "audKey3Value", "audTableName", "audFieldName", "audOldValue", "audNewValue", "audAction", "audSystemID", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        audDateTime: typing.Union[MetaOapg.properties.audDateTime, str, datetime, schemas.Unset] = schemas.unset,
        audKey1Label: typing.Union[MetaOapg.properties.audKey1Label, str, schemas.Unset] = schemas.unset,
        audKey2Label: typing.Union[MetaOapg.properties.audKey2Label, str, schemas.Unset] = schemas.unset,
        audKey3Label: typing.Union[MetaOapg.properties.audKey3Label, str, schemas.Unset] = schemas.unset,
        audKey1Value: typing.Union[MetaOapg.properties.audKey1Value, str, schemas.Unset] = schemas.unset,
        audKey2Value: typing.Union[MetaOapg.properties.audKey2Value, str, schemas.Unset] = schemas.unset,
        audKey3Value: typing.Union[MetaOapg.properties.audKey3Value, str, schemas.Unset] = schemas.unset,
        audTableName: typing.Union[MetaOapg.properties.audTableName, str, schemas.Unset] = schemas.unset,
        audFieldName: typing.Union[MetaOapg.properties.audFieldName, str, schemas.Unset] = schemas.unset,
        audOldValue: typing.Union[MetaOapg.properties.audOldValue, str, schemas.Unset] = schemas.unset,
        audNewValue: typing.Union[MetaOapg.properties.audNewValue, str, schemas.Unset] = schemas.unset,
        audAction: typing.Union[MetaOapg.properties.audAction, str, schemas.Unset] = schemas.unset,
        audSystemID: typing.Union[MetaOapg.properties.audSystemID, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AuditDetails':
        return super().__new__(
            cls,
            *args,
            audDateTime=audDateTime,
            audKey1Label=audKey1Label,
            audKey2Label=audKey2Label,
            audKey3Label=audKey3Label,
            audKey1Value=audKey1Value,
            audKey2Value=audKey2Value,
            audKey3Value=audKey3Value,
            audTableName=audTableName,
            audFieldName=audFieldName,
            audOldValue=audOldValue,
            audNewValue=audNewValue,
            audAction=audAction,
            audSystemID=audSystemID,
            _configuration=_configuration,
            **kwargs,
        )
