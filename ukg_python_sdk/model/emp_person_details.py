# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class EmpPersonDetails(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            additionalName1 = schemas.StrSchema
            additionalName2 = schemas.StrSchema
            addressId = schemas.UUIDSchema
            addressIsOnTaxBoundary = schemas.BoolSchema
            addressLatitude = schemas.Float64Schema
            cobraExport = schemas.StrSchema
            cobraIsActive = schemas.BoolSchema
            cobraReason = schemas.StrSchema
            cobraStatus = schemas.StrSchema
            cobraStatusDate = schemas.DateTimeSchema
            communityBroadcastSmsCode = schemas.StrSchema
            consentElectronicW2 = schemas.BoolSchema
            consentElectronicw2pr = schemas.BoolSchema
            dateDeceased = schemas.DateTimeSchema
            dateOfCobraEvent = schemas.DateTimeSchema
            dateOfCobraExport = schemas.DateTimeSchema
            dateOfCobraLetter = schemas.DateTimeSchema
            dateOfI9Expiration = schemas.DateTimeSchema
            datetimeChanged = schemas.DateTimeSchema
            datetimeCreated = schemas.DateTimeSchema
            disabilityType = schemas.StrSchema
            ethnicDescription = schemas.StrSchema
            formerName = schemas.StrSchema
            healthBloodType = schemas.StrSchema
            healthEyes = schemas.StrSchema
            healthHair = schemas.StrSchema
            healthHeightFeet = schemas.StrSchema
            healthHeightInches = schemas.StrSchema
            healthLastDonateDate = schemas.DateTimeSchema
            healthWeight = schemas.Float32Schema
            i9AlienNumber = schemas.StrSchema
            i9DocA = schemas.StrSchema
            i9DocB = schemas.StrSchema
            i9DocC = schemas.StrSchema
            i9Verified = schemas.BoolSchema
            i9VisaType = schemas.StrSchema
            i9WorkAuth = schemas.StrSchema
            isDisabled = schemas.BoolSchema
            isMultiPayGroup = schemas.BoolSchema
            isSmoker = schemas.BoolSchema
            militaryService = schemas.BoolSchema
            militaryBranchServed = schemas.StrSchema
            militaryEra = schemas.StrSchema
            militaryIsDisabledVet = schemas.StrSchema
            militaryIsOthEligVet = schemas.StrSchema
            militaryIsOthEligVetBasis = schemas.StrSchema
            militaryIsActiveWartimeVet = schemas.StrSchema
            nameFormer = schemas.StrSchema
            previousSSN = schemas.StrSchema
            originCountry = schemas.StrSchema
            originLocation = schemas.StrSchema
            w2IsDeceased = schemas.BoolSchema
            cobraNotes = schemas.StrSchema
            addressSms = schemas.StrSchema
            militarySeparationDate = schemas.DateTimeSchema
            homePhoneIsPrivate = schemas.BoolSchema
            smsApprovals = schemas.BoolSchema
            smsPayNotification = schemas.BoolSchema
            i9VisaExpirationDate = schemas.DateTimeSchema
            militaryIsMedalVet = schemas.StrSchema
            lastNameNotSameAsSSCard = schemas.StrSchema
            chkCashingInstCode = schemas.StrSchema
            nationality1 = schemas.StrSchema
            nationality2 = schemas.StrSchema
            nationality3 = schemas.StrSchema
            personId = schemas.UUIDSchema
            employeeId = schemas.StrSchema
            companyId = schemas.StrSchema
            userName = schemas.StrSchema
            firstName = schemas.StrSchema
            middleName = schemas.StrSchema
            lastName = schemas.StrSchema
            preferredName = schemas.StrSchema
            namePrefixCode = schemas.StrSchema
            nameSufixCode = schemas.StrSchema
            emailAddress = schemas.StrSchema
            emailAddressAlternate = schemas.StrSchema
            homePhone = schemas.StrSchema
            homePhoneCountry = schemas.StrSchema
            addressLine1 = schemas.StrSchema
            addressLine2 = schemas.StrSchema
            addressCity = schemas.StrSchema
            addressState = schemas.StrSchema
            addressZipCode = schemas.StrSchema
            addressCountry = schemas.StrSchema
            addressCounty = schemas.StrSchema
            nationalId = schemas.StrSchema
            nationalIdCountry = schemas.StrSchema
            dateOfBirth = schemas.DateTimeSchema
            gender = schemas.StrSchema
            ethnicIDCode = schemas.StrSchema
            maritalStatusCode = schemas.StrSchema
            ssn = schemas.StrSchema
            ssnIsSuppressed = schemas.BoolSchema
            __annotations__ = {
                "additionalName1": additionalName1,
                "additionalName2": additionalName2,
                "addressId": addressId,
                "addressIsOnTaxBoundary": addressIsOnTaxBoundary,
                "addressLatitude": addressLatitude,
                "cobraExport": cobraExport,
                "cobraIsActive": cobraIsActive,
                "cobraReason": cobraReason,
                "cobraStatus": cobraStatus,
                "cobraStatusDate": cobraStatusDate,
                "communityBroadcastSmsCode": communityBroadcastSmsCode,
                "consentElectronicW2": consentElectronicW2,
                "consentElectronicw2pr": consentElectronicw2pr,
                "dateDeceased": dateDeceased,
                "dateOfCobraEvent": dateOfCobraEvent,
                "dateOfCobraExport": dateOfCobraExport,
                "dateOfCobraLetter": dateOfCobraLetter,
                "dateOfI9Expiration": dateOfI9Expiration,
                "datetimeChanged": datetimeChanged,
                "datetimeCreated": datetimeCreated,
                "disabilityType": disabilityType,
                "ethnicDescription": ethnicDescription,
                "formerName": formerName,
                "healthBloodType": healthBloodType,
                "healthEyes": healthEyes,
                "healthHair": healthHair,
                "healthHeightFeet": healthHeightFeet,
                "healthHeightInches": healthHeightInches,
                "healthLastDonateDate": healthLastDonateDate,
                "healthWeight": healthWeight,
                "i9AlienNumber": i9AlienNumber,
                "i9DocA": i9DocA,
                "i9DocB": i9DocB,
                "i9DocC": i9DocC,
                "i9Verified": i9Verified,
                "i9VisaType": i9VisaType,
                "i9WorkAuth": i9WorkAuth,
                "isDisabled": isDisabled,
                "isMultiPayGroup": isMultiPayGroup,
                "isSmoker": isSmoker,
                "militaryService": militaryService,
                "militaryBranchServed": militaryBranchServed,
                "militaryEra": militaryEra,
                "militaryIsDisabledVet": militaryIsDisabledVet,
                "militaryIsOthEligVet": militaryIsOthEligVet,
                "militaryIsOthEligVetBasis": militaryIsOthEligVetBasis,
                "militaryIsActiveWartimeVet": militaryIsActiveWartimeVet,
                "nameFormer": nameFormer,
                "previousSSN": previousSSN,
                "originCountry": originCountry,
                "originLocation": originLocation,
                "w2IsDeceased": w2IsDeceased,
                "cobraNotes": cobraNotes,
                "addressSms": addressSms,
                "militarySeparationDate": militarySeparationDate,
                "homePhoneIsPrivate": homePhoneIsPrivate,
                "smsApprovals": smsApprovals,
                "smsPayNotification": smsPayNotification,
                "i9VisaExpirationDate": i9VisaExpirationDate,
                "militaryIsMedalVet": militaryIsMedalVet,
                "lastNameNotSameAsSSCard": lastNameNotSameAsSSCard,
                "chkCashingInstCode": chkCashingInstCode,
                "nationality1": nationality1,
                "nationality2": nationality2,
                "nationality3": nationality3,
                "personId": personId,
                "employeeId": employeeId,
                "companyId": companyId,
                "userName": userName,
                "firstName": firstName,
                "middleName": middleName,
                "lastName": lastName,
                "preferredName": preferredName,
                "namePrefixCode": namePrefixCode,
                "nameSufixCode": nameSufixCode,
                "emailAddress": emailAddress,
                "emailAddressAlternate": emailAddressAlternate,
                "homePhone": homePhone,
                "homePhoneCountry": homePhoneCountry,
                "addressLine1": addressLine1,
                "addressLine2": addressLine2,
                "addressCity": addressCity,
                "addressState": addressState,
                "addressZipCode": addressZipCode,
                "addressCountry": addressCountry,
                "addressCounty": addressCounty,
                "nationalId": nationalId,
                "nationalIdCountry": nationalIdCountry,
                "dateOfBirth": dateOfBirth,
                "gender": gender,
                "ethnicIDCode": ethnicIDCode,
                "maritalStatusCode": maritalStatusCode,
                "ssn": ssn,
                "ssnIsSuppressed": ssnIsSuppressed,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["additionalName1"]) -> MetaOapg.properties.additionalName1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["additionalName2"]) -> MetaOapg.properties.additionalName2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressId"]) -> MetaOapg.properties.addressId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressIsOnTaxBoundary"]) -> MetaOapg.properties.addressIsOnTaxBoundary: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressLatitude"]) -> MetaOapg.properties.addressLatitude: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraExport"]) -> MetaOapg.properties.cobraExport: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraIsActive"]) -> MetaOapg.properties.cobraIsActive: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraReason"]) -> MetaOapg.properties.cobraReason: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraStatus"]) -> MetaOapg.properties.cobraStatus: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraStatusDate"]) -> MetaOapg.properties.cobraStatusDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["communityBroadcastSmsCode"]) -> MetaOapg.properties.communityBroadcastSmsCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["consentElectronicW2"]) -> MetaOapg.properties.consentElectronicW2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["consentElectronicw2pr"]) -> MetaOapg.properties.consentElectronicw2pr: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateDeceased"]) -> MetaOapg.properties.dateDeceased: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfCobraEvent"]) -> MetaOapg.properties.dateOfCobraEvent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfCobraExport"]) -> MetaOapg.properties.dateOfCobraExport: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfCobraLetter"]) -> MetaOapg.properties.dateOfCobraLetter: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfI9Expiration"]) -> MetaOapg.properties.dateOfI9Expiration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["datetimeChanged"]) -> MetaOapg.properties.datetimeChanged: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["datetimeCreated"]) -> MetaOapg.properties.datetimeCreated: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["disabilityType"]) -> MetaOapg.properties.disabilityType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ethnicDescription"]) -> MetaOapg.properties.ethnicDescription: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["formerName"]) -> MetaOapg.properties.formerName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthBloodType"]) -> MetaOapg.properties.healthBloodType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthEyes"]) -> MetaOapg.properties.healthEyes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthHair"]) -> MetaOapg.properties.healthHair: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthHeightFeet"]) -> MetaOapg.properties.healthHeightFeet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthHeightInches"]) -> MetaOapg.properties.healthHeightInches: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthLastDonateDate"]) -> MetaOapg.properties.healthLastDonateDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["healthWeight"]) -> MetaOapg.properties.healthWeight: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9AlienNumber"]) -> MetaOapg.properties.i9AlienNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocA"]) -> MetaOapg.properties.i9DocA: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocB"]) -> MetaOapg.properties.i9DocB: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9DocC"]) -> MetaOapg.properties.i9DocC: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9Verified"]) -> MetaOapg.properties.i9Verified: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9VisaType"]) -> MetaOapg.properties.i9VisaType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9WorkAuth"]) -> MetaOapg.properties.i9WorkAuth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isDisabled"]) -> MetaOapg.properties.isDisabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isMultiPayGroup"]) -> MetaOapg.properties.isMultiPayGroup: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isSmoker"]) -> MetaOapg.properties.isSmoker: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryService"]) -> MetaOapg.properties.militaryService: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryBranchServed"]) -> MetaOapg.properties.militaryBranchServed: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryEra"]) -> MetaOapg.properties.militaryEra: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsDisabledVet"]) -> MetaOapg.properties.militaryIsDisabledVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsOthEligVet"]) -> MetaOapg.properties.militaryIsOthEligVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsOthEligVetBasis"]) -> MetaOapg.properties.militaryIsOthEligVetBasis: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsActiveWartimeVet"]) -> MetaOapg.properties.militaryIsActiveWartimeVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nameFormer"]) -> MetaOapg.properties.nameFormer: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["previousSSN"]) -> MetaOapg.properties.previousSSN: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originCountry"]) -> MetaOapg.properties.originCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["originLocation"]) -> MetaOapg.properties.originLocation: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["w2IsDeceased"]) -> MetaOapg.properties.w2IsDeceased: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cobraNotes"]) -> MetaOapg.properties.cobraNotes: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressSms"]) -> MetaOapg.properties.addressSms: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militarySeparationDate"]) -> MetaOapg.properties.militarySeparationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["homePhoneIsPrivate"]) -> MetaOapg.properties.homePhoneIsPrivate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["smsApprovals"]) -> MetaOapg.properties.smsApprovals: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["smsPayNotification"]) -> MetaOapg.properties.smsPayNotification: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["i9VisaExpirationDate"]) -> MetaOapg.properties.i9VisaExpirationDate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["militaryIsMedalVet"]) -> MetaOapg.properties.militaryIsMedalVet: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastNameNotSameAsSSCard"]) -> MetaOapg.properties.lastNameNotSameAsSSCard: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["chkCashingInstCode"]) -> MetaOapg.properties.chkCashingInstCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationality1"]) -> MetaOapg.properties.nationality1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationality2"]) -> MetaOapg.properties.nationality2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationality3"]) -> MetaOapg.properties.nationality3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["personId"]) -> MetaOapg.properties.personId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeId"]) -> MetaOapg.properties.employeeId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyId"]) -> MetaOapg.properties.companyId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["userName"]) -> MetaOapg.properties.userName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["firstName"]) -> MetaOapg.properties.firstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["middleName"]) -> MetaOapg.properties.middleName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastName"]) -> MetaOapg.properties.lastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["preferredName"]) -> MetaOapg.properties.preferredName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["namePrefixCode"]) -> MetaOapg.properties.namePrefixCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nameSufixCode"]) -> MetaOapg.properties.nameSufixCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailAddress"]) -> MetaOapg.properties.emailAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["emailAddressAlternate"]) -> MetaOapg.properties.emailAddressAlternate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["homePhone"]) -> MetaOapg.properties.homePhone: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["homePhoneCountry"]) -> MetaOapg.properties.homePhoneCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressLine1"]) -> MetaOapg.properties.addressLine1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressLine2"]) -> MetaOapg.properties.addressLine2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCity"]) -> MetaOapg.properties.addressCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressState"]) -> MetaOapg.properties.addressState: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressZipCode"]) -> MetaOapg.properties.addressZipCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCountry"]) -> MetaOapg.properties.addressCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCounty"]) -> MetaOapg.properties.addressCounty: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationalId"]) -> MetaOapg.properties.nationalId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nationalIdCountry"]) -> MetaOapg.properties.nationalIdCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["dateOfBirth"]) -> MetaOapg.properties.dateOfBirth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["gender"]) -> MetaOapg.properties.gender: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ethnicIDCode"]) -> MetaOapg.properties.ethnicIDCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["maritalStatusCode"]) -> MetaOapg.properties.maritalStatusCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssn"]) -> MetaOapg.properties.ssn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["ssnIsSuppressed"]) -> MetaOapg.properties.ssnIsSuppressed: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["additionalName1", "additionalName2", "addressId", "addressIsOnTaxBoundary", "addressLatitude", "cobraExport", "cobraIsActive", "cobraReason", "cobraStatus", "cobraStatusDate", "communityBroadcastSmsCode", "consentElectronicW2", "consentElectronicw2pr", "dateDeceased", "dateOfCobraEvent", "dateOfCobraExport", "dateOfCobraLetter", "dateOfI9Expiration", "datetimeChanged", "datetimeCreated", "disabilityType", "ethnicDescription", "formerName", "healthBloodType", "healthEyes", "healthHair", "healthHeightFeet", "healthHeightInches", "healthLastDonateDate", "healthWeight", "i9AlienNumber", "i9DocA", "i9DocB", "i9DocC", "i9Verified", "i9VisaType", "i9WorkAuth", "isDisabled", "isMultiPayGroup", "isSmoker", "militaryService", "militaryBranchServed", "militaryEra", "militaryIsDisabledVet", "militaryIsOthEligVet", "militaryIsOthEligVetBasis", "militaryIsActiveWartimeVet", "nameFormer", "previousSSN", "originCountry", "originLocation", "w2IsDeceased", "cobraNotes", "addressSms", "militarySeparationDate", "homePhoneIsPrivate", "smsApprovals", "smsPayNotification", "i9VisaExpirationDate", "militaryIsMedalVet", "lastNameNotSameAsSSCard", "chkCashingInstCode", "nationality1", "nationality2", "nationality3", "personId", "employeeId", "companyId", "userName", "firstName", "middleName", "lastName", "preferredName", "namePrefixCode", "nameSufixCode", "emailAddress", "emailAddressAlternate", "homePhone", "homePhoneCountry", "addressLine1", "addressLine2", "addressCity", "addressState", "addressZipCode", "addressCountry", "addressCounty", "nationalId", "nationalIdCountry", "dateOfBirth", "gender", "ethnicIDCode", "maritalStatusCode", "ssn", "ssnIsSuppressed", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["additionalName1"]) -> typing.Union[MetaOapg.properties.additionalName1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["additionalName2"]) -> typing.Union[MetaOapg.properties.additionalName2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressId"]) -> typing.Union[MetaOapg.properties.addressId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressIsOnTaxBoundary"]) -> typing.Union[MetaOapg.properties.addressIsOnTaxBoundary, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressLatitude"]) -> typing.Union[MetaOapg.properties.addressLatitude, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraExport"]) -> typing.Union[MetaOapg.properties.cobraExport, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraIsActive"]) -> typing.Union[MetaOapg.properties.cobraIsActive, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraReason"]) -> typing.Union[MetaOapg.properties.cobraReason, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraStatus"]) -> typing.Union[MetaOapg.properties.cobraStatus, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraStatusDate"]) -> typing.Union[MetaOapg.properties.cobraStatusDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["communityBroadcastSmsCode"]) -> typing.Union[MetaOapg.properties.communityBroadcastSmsCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["consentElectronicW2"]) -> typing.Union[MetaOapg.properties.consentElectronicW2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["consentElectronicw2pr"]) -> typing.Union[MetaOapg.properties.consentElectronicw2pr, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateDeceased"]) -> typing.Union[MetaOapg.properties.dateDeceased, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfCobraEvent"]) -> typing.Union[MetaOapg.properties.dateOfCobraEvent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfCobraExport"]) -> typing.Union[MetaOapg.properties.dateOfCobraExport, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfCobraLetter"]) -> typing.Union[MetaOapg.properties.dateOfCobraLetter, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfI9Expiration"]) -> typing.Union[MetaOapg.properties.dateOfI9Expiration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["datetimeChanged"]) -> typing.Union[MetaOapg.properties.datetimeChanged, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["datetimeCreated"]) -> typing.Union[MetaOapg.properties.datetimeCreated, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["disabilityType"]) -> typing.Union[MetaOapg.properties.disabilityType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ethnicDescription"]) -> typing.Union[MetaOapg.properties.ethnicDescription, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["formerName"]) -> typing.Union[MetaOapg.properties.formerName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthBloodType"]) -> typing.Union[MetaOapg.properties.healthBloodType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthEyes"]) -> typing.Union[MetaOapg.properties.healthEyes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthHair"]) -> typing.Union[MetaOapg.properties.healthHair, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthHeightFeet"]) -> typing.Union[MetaOapg.properties.healthHeightFeet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthHeightInches"]) -> typing.Union[MetaOapg.properties.healthHeightInches, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthLastDonateDate"]) -> typing.Union[MetaOapg.properties.healthLastDonateDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["healthWeight"]) -> typing.Union[MetaOapg.properties.healthWeight, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9AlienNumber"]) -> typing.Union[MetaOapg.properties.i9AlienNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocA"]) -> typing.Union[MetaOapg.properties.i9DocA, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocB"]) -> typing.Union[MetaOapg.properties.i9DocB, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9DocC"]) -> typing.Union[MetaOapg.properties.i9DocC, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9Verified"]) -> typing.Union[MetaOapg.properties.i9Verified, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9VisaType"]) -> typing.Union[MetaOapg.properties.i9VisaType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9WorkAuth"]) -> typing.Union[MetaOapg.properties.i9WorkAuth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isDisabled"]) -> typing.Union[MetaOapg.properties.isDisabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isMultiPayGroup"]) -> typing.Union[MetaOapg.properties.isMultiPayGroup, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isSmoker"]) -> typing.Union[MetaOapg.properties.isSmoker, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryService"]) -> typing.Union[MetaOapg.properties.militaryService, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryBranchServed"]) -> typing.Union[MetaOapg.properties.militaryBranchServed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryEra"]) -> typing.Union[MetaOapg.properties.militaryEra, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsDisabledVet"]) -> typing.Union[MetaOapg.properties.militaryIsDisabledVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsOthEligVet"]) -> typing.Union[MetaOapg.properties.militaryIsOthEligVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsOthEligVetBasis"]) -> typing.Union[MetaOapg.properties.militaryIsOthEligVetBasis, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsActiveWartimeVet"]) -> typing.Union[MetaOapg.properties.militaryIsActiveWartimeVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nameFormer"]) -> typing.Union[MetaOapg.properties.nameFormer, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["previousSSN"]) -> typing.Union[MetaOapg.properties.previousSSN, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originCountry"]) -> typing.Union[MetaOapg.properties.originCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["originLocation"]) -> typing.Union[MetaOapg.properties.originLocation, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["w2IsDeceased"]) -> typing.Union[MetaOapg.properties.w2IsDeceased, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cobraNotes"]) -> typing.Union[MetaOapg.properties.cobraNotes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressSms"]) -> typing.Union[MetaOapg.properties.addressSms, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militarySeparationDate"]) -> typing.Union[MetaOapg.properties.militarySeparationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["homePhoneIsPrivate"]) -> typing.Union[MetaOapg.properties.homePhoneIsPrivate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["smsApprovals"]) -> typing.Union[MetaOapg.properties.smsApprovals, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["smsPayNotification"]) -> typing.Union[MetaOapg.properties.smsPayNotification, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["i9VisaExpirationDate"]) -> typing.Union[MetaOapg.properties.i9VisaExpirationDate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["militaryIsMedalVet"]) -> typing.Union[MetaOapg.properties.militaryIsMedalVet, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastNameNotSameAsSSCard"]) -> typing.Union[MetaOapg.properties.lastNameNotSameAsSSCard, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["chkCashingInstCode"]) -> typing.Union[MetaOapg.properties.chkCashingInstCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationality1"]) -> typing.Union[MetaOapg.properties.nationality1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationality2"]) -> typing.Union[MetaOapg.properties.nationality2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationality3"]) -> typing.Union[MetaOapg.properties.nationality3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["personId"]) -> typing.Union[MetaOapg.properties.personId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeId"]) -> typing.Union[MetaOapg.properties.employeeId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyId"]) -> typing.Union[MetaOapg.properties.companyId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["userName"]) -> typing.Union[MetaOapg.properties.userName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["firstName"]) -> typing.Union[MetaOapg.properties.firstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["middleName"]) -> typing.Union[MetaOapg.properties.middleName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastName"]) -> typing.Union[MetaOapg.properties.lastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["preferredName"]) -> typing.Union[MetaOapg.properties.preferredName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["namePrefixCode"]) -> typing.Union[MetaOapg.properties.namePrefixCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nameSufixCode"]) -> typing.Union[MetaOapg.properties.nameSufixCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailAddress"]) -> typing.Union[MetaOapg.properties.emailAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["emailAddressAlternate"]) -> typing.Union[MetaOapg.properties.emailAddressAlternate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["homePhone"]) -> typing.Union[MetaOapg.properties.homePhone, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["homePhoneCountry"]) -> typing.Union[MetaOapg.properties.homePhoneCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressLine1"]) -> typing.Union[MetaOapg.properties.addressLine1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressLine2"]) -> typing.Union[MetaOapg.properties.addressLine2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCity"]) -> typing.Union[MetaOapg.properties.addressCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressState"]) -> typing.Union[MetaOapg.properties.addressState, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressZipCode"]) -> typing.Union[MetaOapg.properties.addressZipCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCountry"]) -> typing.Union[MetaOapg.properties.addressCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCounty"]) -> typing.Union[MetaOapg.properties.addressCounty, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationalId"]) -> typing.Union[MetaOapg.properties.nationalId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nationalIdCountry"]) -> typing.Union[MetaOapg.properties.nationalIdCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["dateOfBirth"]) -> typing.Union[MetaOapg.properties.dateOfBirth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["gender"]) -> typing.Union[MetaOapg.properties.gender, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ethnicIDCode"]) -> typing.Union[MetaOapg.properties.ethnicIDCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["maritalStatusCode"]) -> typing.Union[MetaOapg.properties.maritalStatusCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssn"]) -> typing.Union[MetaOapg.properties.ssn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["ssnIsSuppressed"]) -> typing.Union[MetaOapg.properties.ssnIsSuppressed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["additionalName1", "additionalName2", "addressId", "addressIsOnTaxBoundary", "addressLatitude", "cobraExport", "cobraIsActive", "cobraReason", "cobraStatus", "cobraStatusDate", "communityBroadcastSmsCode", "consentElectronicW2", "consentElectronicw2pr", "dateDeceased", "dateOfCobraEvent", "dateOfCobraExport", "dateOfCobraLetter", "dateOfI9Expiration", "datetimeChanged", "datetimeCreated", "disabilityType", "ethnicDescription", "formerName", "healthBloodType", "healthEyes", "healthHair", "healthHeightFeet", "healthHeightInches", "healthLastDonateDate", "healthWeight", "i9AlienNumber", "i9DocA", "i9DocB", "i9DocC", "i9Verified", "i9VisaType", "i9WorkAuth", "isDisabled", "isMultiPayGroup", "isSmoker", "militaryService", "militaryBranchServed", "militaryEra", "militaryIsDisabledVet", "militaryIsOthEligVet", "militaryIsOthEligVetBasis", "militaryIsActiveWartimeVet", "nameFormer", "previousSSN", "originCountry", "originLocation", "w2IsDeceased", "cobraNotes", "addressSms", "militarySeparationDate", "homePhoneIsPrivate", "smsApprovals", "smsPayNotification", "i9VisaExpirationDate", "militaryIsMedalVet", "lastNameNotSameAsSSCard", "chkCashingInstCode", "nationality1", "nationality2", "nationality3", "personId", "employeeId", "companyId", "userName", "firstName", "middleName", "lastName", "preferredName", "namePrefixCode", "nameSufixCode", "emailAddress", "emailAddressAlternate", "homePhone", "homePhoneCountry", "addressLine1", "addressLine2", "addressCity", "addressState", "addressZipCode", "addressCountry", "addressCounty", "nationalId", "nationalIdCountry", "dateOfBirth", "gender", "ethnicIDCode", "maritalStatusCode", "ssn", "ssnIsSuppressed", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        additionalName1: typing.Union[MetaOapg.properties.additionalName1, str, schemas.Unset] = schemas.unset,
        additionalName2: typing.Union[MetaOapg.properties.additionalName2, str, schemas.Unset] = schemas.unset,
        addressId: typing.Union[MetaOapg.properties.addressId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        addressIsOnTaxBoundary: typing.Union[MetaOapg.properties.addressIsOnTaxBoundary, bool, schemas.Unset] = schemas.unset,
        addressLatitude: typing.Union[MetaOapg.properties.addressLatitude, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        cobraExport: typing.Union[MetaOapg.properties.cobraExport, str, schemas.Unset] = schemas.unset,
        cobraIsActive: typing.Union[MetaOapg.properties.cobraIsActive, bool, schemas.Unset] = schemas.unset,
        cobraReason: typing.Union[MetaOapg.properties.cobraReason, str, schemas.Unset] = schemas.unset,
        cobraStatus: typing.Union[MetaOapg.properties.cobraStatus, str, schemas.Unset] = schemas.unset,
        cobraStatusDate: typing.Union[MetaOapg.properties.cobraStatusDate, str, datetime, schemas.Unset] = schemas.unset,
        communityBroadcastSmsCode: typing.Union[MetaOapg.properties.communityBroadcastSmsCode, str, schemas.Unset] = schemas.unset,
        consentElectronicW2: typing.Union[MetaOapg.properties.consentElectronicW2, bool, schemas.Unset] = schemas.unset,
        consentElectronicw2pr: typing.Union[MetaOapg.properties.consentElectronicw2pr, bool, schemas.Unset] = schemas.unset,
        dateDeceased: typing.Union[MetaOapg.properties.dateDeceased, str, datetime, schemas.Unset] = schemas.unset,
        dateOfCobraEvent: typing.Union[MetaOapg.properties.dateOfCobraEvent, str, datetime, schemas.Unset] = schemas.unset,
        dateOfCobraExport: typing.Union[MetaOapg.properties.dateOfCobraExport, str, datetime, schemas.Unset] = schemas.unset,
        dateOfCobraLetter: typing.Union[MetaOapg.properties.dateOfCobraLetter, str, datetime, schemas.Unset] = schemas.unset,
        dateOfI9Expiration: typing.Union[MetaOapg.properties.dateOfI9Expiration, str, datetime, schemas.Unset] = schemas.unset,
        datetimeChanged: typing.Union[MetaOapg.properties.datetimeChanged, str, datetime, schemas.Unset] = schemas.unset,
        datetimeCreated: typing.Union[MetaOapg.properties.datetimeCreated, str, datetime, schemas.Unset] = schemas.unset,
        disabilityType: typing.Union[MetaOapg.properties.disabilityType, str, schemas.Unset] = schemas.unset,
        ethnicDescription: typing.Union[MetaOapg.properties.ethnicDescription, str, schemas.Unset] = schemas.unset,
        formerName: typing.Union[MetaOapg.properties.formerName, str, schemas.Unset] = schemas.unset,
        healthBloodType: typing.Union[MetaOapg.properties.healthBloodType, str, schemas.Unset] = schemas.unset,
        healthEyes: typing.Union[MetaOapg.properties.healthEyes, str, schemas.Unset] = schemas.unset,
        healthHair: typing.Union[MetaOapg.properties.healthHair, str, schemas.Unset] = schemas.unset,
        healthHeightFeet: typing.Union[MetaOapg.properties.healthHeightFeet, str, schemas.Unset] = schemas.unset,
        healthHeightInches: typing.Union[MetaOapg.properties.healthHeightInches, str, schemas.Unset] = schemas.unset,
        healthLastDonateDate: typing.Union[MetaOapg.properties.healthLastDonateDate, str, datetime, schemas.Unset] = schemas.unset,
        healthWeight: typing.Union[MetaOapg.properties.healthWeight, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        i9AlienNumber: typing.Union[MetaOapg.properties.i9AlienNumber, str, schemas.Unset] = schemas.unset,
        i9DocA: typing.Union[MetaOapg.properties.i9DocA, str, schemas.Unset] = schemas.unset,
        i9DocB: typing.Union[MetaOapg.properties.i9DocB, str, schemas.Unset] = schemas.unset,
        i9DocC: typing.Union[MetaOapg.properties.i9DocC, str, schemas.Unset] = schemas.unset,
        i9Verified: typing.Union[MetaOapg.properties.i9Verified, bool, schemas.Unset] = schemas.unset,
        i9VisaType: typing.Union[MetaOapg.properties.i9VisaType, str, schemas.Unset] = schemas.unset,
        i9WorkAuth: typing.Union[MetaOapg.properties.i9WorkAuth, str, schemas.Unset] = schemas.unset,
        isDisabled: typing.Union[MetaOapg.properties.isDisabled, bool, schemas.Unset] = schemas.unset,
        isMultiPayGroup: typing.Union[MetaOapg.properties.isMultiPayGroup, bool, schemas.Unset] = schemas.unset,
        isSmoker: typing.Union[MetaOapg.properties.isSmoker, bool, schemas.Unset] = schemas.unset,
        militaryService: typing.Union[MetaOapg.properties.militaryService, bool, schemas.Unset] = schemas.unset,
        militaryBranchServed: typing.Union[MetaOapg.properties.militaryBranchServed, str, schemas.Unset] = schemas.unset,
        militaryEra: typing.Union[MetaOapg.properties.militaryEra, str, schemas.Unset] = schemas.unset,
        militaryIsDisabledVet: typing.Union[MetaOapg.properties.militaryIsDisabledVet, str, schemas.Unset] = schemas.unset,
        militaryIsOthEligVet: typing.Union[MetaOapg.properties.militaryIsOthEligVet, str, schemas.Unset] = schemas.unset,
        militaryIsOthEligVetBasis: typing.Union[MetaOapg.properties.militaryIsOthEligVetBasis, str, schemas.Unset] = schemas.unset,
        militaryIsActiveWartimeVet: typing.Union[MetaOapg.properties.militaryIsActiveWartimeVet, str, schemas.Unset] = schemas.unset,
        nameFormer: typing.Union[MetaOapg.properties.nameFormer, str, schemas.Unset] = schemas.unset,
        previousSSN: typing.Union[MetaOapg.properties.previousSSN, str, schemas.Unset] = schemas.unset,
        originCountry: typing.Union[MetaOapg.properties.originCountry, str, schemas.Unset] = schemas.unset,
        originLocation: typing.Union[MetaOapg.properties.originLocation, str, schemas.Unset] = schemas.unset,
        w2IsDeceased: typing.Union[MetaOapg.properties.w2IsDeceased, bool, schemas.Unset] = schemas.unset,
        cobraNotes: typing.Union[MetaOapg.properties.cobraNotes, str, schemas.Unset] = schemas.unset,
        addressSms: typing.Union[MetaOapg.properties.addressSms, str, schemas.Unset] = schemas.unset,
        militarySeparationDate: typing.Union[MetaOapg.properties.militarySeparationDate, str, datetime, schemas.Unset] = schemas.unset,
        homePhoneIsPrivate: typing.Union[MetaOapg.properties.homePhoneIsPrivate, bool, schemas.Unset] = schemas.unset,
        smsApprovals: typing.Union[MetaOapg.properties.smsApprovals, bool, schemas.Unset] = schemas.unset,
        smsPayNotification: typing.Union[MetaOapg.properties.smsPayNotification, bool, schemas.Unset] = schemas.unset,
        i9VisaExpirationDate: typing.Union[MetaOapg.properties.i9VisaExpirationDate, str, datetime, schemas.Unset] = schemas.unset,
        militaryIsMedalVet: typing.Union[MetaOapg.properties.militaryIsMedalVet, str, schemas.Unset] = schemas.unset,
        lastNameNotSameAsSSCard: typing.Union[MetaOapg.properties.lastNameNotSameAsSSCard, str, schemas.Unset] = schemas.unset,
        chkCashingInstCode: typing.Union[MetaOapg.properties.chkCashingInstCode, str, schemas.Unset] = schemas.unset,
        nationality1: typing.Union[MetaOapg.properties.nationality1, str, schemas.Unset] = schemas.unset,
        nationality2: typing.Union[MetaOapg.properties.nationality2, str, schemas.Unset] = schemas.unset,
        nationality3: typing.Union[MetaOapg.properties.nationality3, str, schemas.Unset] = schemas.unset,
        personId: typing.Union[MetaOapg.properties.personId, str, uuid.UUID, schemas.Unset] = schemas.unset,
        employeeId: typing.Union[MetaOapg.properties.employeeId, str, schemas.Unset] = schemas.unset,
        companyId: typing.Union[MetaOapg.properties.companyId, str, schemas.Unset] = schemas.unset,
        userName: typing.Union[MetaOapg.properties.userName, str, schemas.Unset] = schemas.unset,
        firstName: typing.Union[MetaOapg.properties.firstName, str, schemas.Unset] = schemas.unset,
        middleName: typing.Union[MetaOapg.properties.middleName, str, schemas.Unset] = schemas.unset,
        lastName: typing.Union[MetaOapg.properties.lastName, str, schemas.Unset] = schemas.unset,
        preferredName: typing.Union[MetaOapg.properties.preferredName, str, schemas.Unset] = schemas.unset,
        namePrefixCode: typing.Union[MetaOapg.properties.namePrefixCode, str, schemas.Unset] = schemas.unset,
        nameSufixCode: typing.Union[MetaOapg.properties.nameSufixCode, str, schemas.Unset] = schemas.unset,
        emailAddress: typing.Union[MetaOapg.properties.emailAddress, str, schemas.Unset] = schemas.unset,
        emailAddressAlternate: typing.Union[MetaOapg.properties.emailAddressAlternate, str, schemas.Unset] = schemas.unset,
        homePhone: typing.Union[MetaOapg.properties.homePhone, str, schemas.Unset] = schemas.unset,
        homePhoneCountry: typing.Union[MetaOapg.properties.homePhoneCountry, str, schemas.Unset] = schemas.unset,
        addressLine1: typing.Union[MetaOapg.properties.addressLine1, str, schemas.Unset] = schemas.unset,
        addressLine2: typing.Union[MetaOapg.properties.addressLine2, str, schemas.Unset] = schemas.unset,
        addressCity: typing.Union[MetaOapg.properties.addressCity, str, schemas.Unset] = schemas.unset,
        addressState: typing.Union[MetaOapg.properties.addressState, str, schemas.Unset] = schemas.unset,
        addressZipCode: typing.Union[MetaOapg.properties.addressZipCode, str, schemas.Unset] = schemas.unset,
        addressCountry: typing.Union[MetaOapg.properties.addressCountry, str, schemas.Unset] = schemas.unset,
        addressCounty: typing.Union[MetaOapg.properties.addressCounty, str, schemas.Unset] = schemas.unset,
        nationalId: typing.Union[MetaOapg.properties.nationalId, str, schemas.Unset] = schemas.unset,
        nationalIdCountry: typing.Union[MetaOapg.properties.nationalIdCountry, str, schemas.Unset] = schemas.unset,
        dateOfBirth: typing.Union[MetaOapg.properties.dateOfBirth, str, datetime, schemas.Unset] = schemas.unset,
        gender: typing.Union[MetaOapg.properties.gender, str, schemas.Unset] = schemas.unset,
        ethnicIDCode: typing.Union[MetaOapg.properties.ethnicIDCode, str, schemas.Unset] = schemas.unset,
        maritalStatusCode: typing.Union[MetaOapg.properties.maritalStatusCode, str, schemas.Unset] = schemas.unset,
        ssn: typing.Union[MetaOapg.properties.ssn, str, schemas.Unset] = schemas.unset,
        ssnIsSuppressed: typing.Union[MetaOapg.properties.ssnIsSuppressed, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'EmpPersonDetails':
        return super().__new__(
            cls,
            *args,
            additionalName1=additionalName1,
            additionalName2=additionalName2,
            addressId=addressId,
            addressIsOnTaxBoundary=addressIsOnTaxBoundary,
            addressLatitude=addressLatitude,
            cobraExport=cobraExport,
            cobraIsActive=cobraIsActive,
            cobraReason=cobraReason,
            cobraStatus=cobraStatus,
            cobraStatusDate=cobraStatusDate,
            communityBroadcastSmsCode=communityBroadcastSmsCode,
            consentElectronicW2=consentElectronicW2,
            consentElectronicw2pr=consentElectronicw2pr,
            dateDeceased=dateDeceased,
            dateOfCobraEvent=dateOfCobraEvent,
            dateOfCobraExport=dateOfCobraExport,
            dateOfCobraLetter=dateOfCobraLetter,
            dateOfI9Expiration=dateOfI9Expiration,
            datetimeChanged=datetimeChanged,
            datetimeCreated=datetimeCreated,
            disabilityType=disabilityType,
            ethnicDescription=ethnicDescription,
            formerName=formerName,
            healthBloodType=healthBloodType,
            healthEyes=healthEyes,
            healthHair=healthHair,
            healthHeightFeet=healthHeightFeet,
            healthHeightInches=healthHeightInches,
            healthLastDonateDate=healthLastDonateDate,
            healthWeight=healthWeight,
            i9AlienNumber=i9AlienNumber,
            i9DocA=i9DocA,
            i9DocB=i9DocB,
            i9DocC=i9DocC,
            i9Verified=i9Verified,
            i9VisaType=i9VisaType,
            i9WorkAuth=i9WorkAuth,
            isDisabled=isDisabled,
            isMultiPayGroup=isMultiPayGroup,
            isSmoker=isSmoker,
            militaryService=militaryService,
            militaryBranchServed=militaryBranchServed,
            militaryEra=militaryEra,
            militaryIsDisabledVet=militaryIsDisabledVet,
            militaryIsOthEligVet=militaryIsOthEligVet,
            militaryIsOthEligVetBasis=militaryIsOthEligVetBasis,
            militaryIsActiveWartimeVet=militaryIsActiveWartimeVet,
            nameFormer=nameFormer,
            previousSSN=previousSSN,
            originCountry=originCountry,
            originLocation=originLocation,
            w2IsDeceased=w2IsDeceased,
            cobraNotes=cobraNotes,
            addressSms=addressSms,
            militarySeparationDate=militarySeparationDate,
            homePhoneIsPrivate=homePhoneIsPrivate,
            smsApprovals=smsApprovals,
            smsPayNotification=smsPayNotification,
            i9VisaExpirationDate=i9VisaExpirationDate,
            militaryIsMedalVet=militaryIsMedalVet,
            lastNameNotSameAsSSCard=lastNameNotSameAsSSCard,
            chkCashingInstCode=chkCashingInstCode,
            nationality1=nationality1,
            nationality2=nationality2,
            nationality3=nationality3,
            personId=personId,
            employeeId=employeeId,
            companyId=companyId,
            userName=userName,
            firstName=firstName,
            middleName=middleName,
            lastName=lastName,
            preferredName=preferredName,
            namePrefixCode=namePrefixCode,
            nameSufixCode=nameSufixCode,
            emailAddress=emailAddress,
            emailAddressAlternate=emailAddressAlternate,
            homePhone=homePhone,
            homePhoneCountry=homePhoneCountry,
            addressLine1=addressLine1,
            addressLine2=addressLine2,
            addressCity=addressCity,
            addressState=addressState,
            addressZipCode=addressZipCode,
            addressCountry=addressCountry,
            addressCounty=addressCounty,
            nationalId=nationalId,
            nationalIdCountry=nationalIdCountry,
            dateOfBirth=dateOfBirth,
            gender=gender,
            ethnicIDCode=ethnicIDCode,
            maritalStatusCode=maritalStatusCode,
            ssn=ssn,
            ssnIsSuppressed=ssnIsSuppressed,
            _configuration=_configuration,
            **kwargs,
        )
