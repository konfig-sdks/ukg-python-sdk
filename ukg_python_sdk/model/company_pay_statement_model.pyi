# coding: utf-8

"""
    User Profile Details

    Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment

    The version of the OpenAPI document: v1
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from ukg_python_sdk import schemas  # noqa: F401


class CompanyPayStatementModel(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def employeeidentifier() -> typing.Type['EmployeePayStatementIdentifierModel']:
                return EmployeePayStatementIdentifierModel
            payidentifier = schemas.StrSchema
            paydate = schemas.DateTimeSchema
            document = schemas.StrSchema
            totalearnings = schemas.Float32Schema
            totaldeductions = schemas.Float32Schema
            totaltaxes = schemas.Float32Schema
            __annotations__ = {
                "employeeidentifier": employeeidentifier,
                "payidentifier": payidentifier,
                "paydate": paydate,
                "document": document,
                "totalearnings": totalearnings,
                "totaldeductions": totaldeductions,
                "totaltaxes": totaltaxes,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["employeeidentifier"]) -> 'EmployeePayStatementIdentifierModel': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["payidentifier"]) -> MetaOapg.properties.payidentifier: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["paydate"]) -> MetaOapg.properties.paydate: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["document"]) -> MetaOapg.properties.document: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totalearnings"]) -> MetaOapg.properties.totalearnings: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totaldeductions"]) -> MetaOapg.properties.totaldeductions: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["totaltaxes"]) -> MetaOapg.properties.totaltaxes: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["employeeidentifier", "payidentifier", "paydate", "document", "totalearnings", "totaldeductions", "totaltaxes", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["employeeidentifier"]) -> typing.Union['EmployeePayStatementIdentifierModel', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["payidentifier"]) -> typing.Union[MetaOapg.properties.payidentifier, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["paydate"]) -> typing.Union[MetaOapg.properties.paydate, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["document"]) -> typing.Union[MetaOapg.properties.document, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totalearnings"]) -> typing.Union[MetaOapg.properties.totalearnings, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totaldeductions"]) -> typing.Union[MetaOapg.properties.totaldeductions, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["totaltaxes"]) -> typing.Union[MetaOapg.properties.totaltaxes, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["employeeidentifier", "payidentifier", "paydate", "document", "totalearnings", "totaldeductions", "totaltaxes", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        employeeidentifier: typing.Union['EmployeePayStatementIdentifierModel', schemas.Unset] = schemas.unset,
        payidentifier: typing.Union[MetaOapg.properties.payidentifier, str, schemas.Unset] = schemas.unset,
        paydate: typing.Union[MetaOapg.properties.paydate, str, datetime, schemas.Unset] = schemas.unset,
        document: typing.Union[MetaOapg.properties.document, str, schemas.Unset] = schemas.unset,
        totalearnings: typing.Union[MetaOapg.properties.totalearnings, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totaldeductions: typing.Union[MetaOapg.properties.totaldeductions, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        totaltaxes: typing.Union[MetaOapg.properties.totaltaxes, decimal.Decimal, int, float, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'CompanyPayStatementModel':
        return super().__new__(
            cls,
            *args,
            employeeidentifier=employeeidentifier,
            payidentifier=payidentifier,
            paydate=paydate,
            document=document,
            totalearnings=totalearnings,
            totaldeductions=totaldeductions,
            totaltaxes=totaltaxes,
            _configuration=_configuration,
            **kwargs,
        )

from ukg_python_sdk.model.employee_pay_statement_identifier_model import EmployeePayStatementIdentifierModel
